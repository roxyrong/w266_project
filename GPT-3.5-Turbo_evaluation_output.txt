('eval_err_num:1\n'
 'medium pred: SELECT s.name, s.song_release_year FROM singer s WHERE s.age = (SELECT MIN(age) FROM singer)\n'
 'medium gold: SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1\n'
 '\n'
 'medium pred: SELECT name, song_release_year FROM singer WHERE age = (SELECT MIN(age) FROM singer)\n'
 'medium gold: SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1\n'
 '\n'
 'eval_err_num:2\n'
 'medium pred: SELECT country, COUNT(*) AS num_singers FROM singer GROUP BY country;\n'
 'medium gold: SELECT country ,  count(*) FROM singer GROUP BY country\n'
 '\n'
 'eval_err_num:3\n'
 'medium pred: SELECT country, COUNT(*) AS num_singers FROM singer GROUP BY country\n'
 'medium gold: SELECT country ,  count(*) FROM singer GROUP BY country\n'
 '\n'
 'medium pred: SELECT name, capacity  FROM stadium  WHERE average = (SELECT MAX(average) FROM stadium)\n'
 'medium gold: SELECT name ,  capacity FROM stadium ORDER BY average DESC LIMIT 1\n'
 '\n'
 'medium pred: SELECT name, capacity FROM stadium WHERE average = (SELECT MAX(average) FROM stadium)\n'
 'medium gold: SELECT name ,  capacity FROM stadium ORDER BY average DESC LIMIT 1\n'
 '\n'
 'eval_err_num:4\n'
 'medium pred: SELECT COUNT(*) FROM concert WHERE year IN (2014, 2015)\n'
 'medium gold: SELECT count(*) FROM concert WHERE YEAR  =  2014 OR YEAR  =  2015\n'
 '\n'
 'eval_err_num:5\n'
 'medium pred: SELECT stadium.name, COUNT(concert.concert_id) AS num_concerts FROM stadium JOIN concert ON stadium.stadium_id = concert.stadium_id GROUP BY '
 'stadium.name;\n'
 'medium gold: SELECT T2.name ,  count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id GROUP BY T1.stadium_id\n'
 '\n'
 'eval_err_num:6\n'
 'medium pred: SELECT stadium.stadium_id, COUNT(concert.concert_id) AS num_concerts FROM stadium LEFT JOIN concert ON stadium.stadium_id = concert.stadium_id '
 'GROUP BY stadium.stadium_id;\n'
 'medium gold: SELECT T2.name ,  count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id GROUP BY T1.stadium_id\n'
 '\n'
 'extra pred: SELECT stadium.name, stadium.capacity FROM stadium JOIN concert ON stadium.stadium_id = concert.stadium_id WHERE concert.year >= 2014 GROUP BY '
 'stadium.name, stadium.capacity ORDER BY COUNT(concert.concert_id) DESC LIMIT 1;\n'
 'extra gold: SELECT T2.name ,  T2.capacity FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  >=  2014 GROUP BY '
 'T2.stadium_id ORDER BY count(*) DESC LIMIT 1\n'
 '\n'
 'extra pred: SELECT name, capacity  FROM stadium  WHERE stadium_id = (     SELECT stadium_id      FROM concert      WHERE year > 2013      GROUP BY '
 'stadium_id      ORDER BY COUNT(*) DESC      LIMIT 1 )\n'
 'extra gold: SELECT T2.name ,  T2.capacity FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  >=  2014 GROUP BY '
 'T2.stadium_id ORDER BY count(*) DESC LIMIT 1\n'
 '\n'
 'eval_err_num:7\n'
 'hard pred: SELECT DISTINCT s1.country FROM singer s1, singer s2 WHERE s1.age > 40 AND s2.age < 30\n'
 'hard gold: SELECT country FROM singer WHERE age  >  40 INTERSECT SELECT country FROM singer WHERE age  <  30\n'
 '\n'
 'hard pred: SELECT name FROM stadium WHERE stadium_id NOT IN (     SELECT stadium_id     FROM concert     WHERE year = 2014 )\n'
 'hard gold: SELECT name FROM stadium EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  =  2014\n'
 '\n'
 'hard pred: SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert WHERE year = 2014)\n'
 'hard gold: SELECT name FROM stadium EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  =  2014\n'
 '\n'
 'eval_err_num:8\n'
 'medium pred: SELECT concert_name, theme, COUNT(singer_id) AS num_singers FROM concert JOIN singer_in_concert ON concert.concert_id = '
 'singer_in_concert.concert_id GROUP BY concert.concert_id;\n'
 'medium gold: SELECT T2.concert_name ,  T2.theme ,  count(*) FROM singer_in_concert AS T1 JOIN concert AS T2 ON T1.concert_id  =  T2.concert_id GROUP BY '
 'T2.concert_id\n'
 '\n'
 'eval_err_num:9\n'
 'medium pred: SELECT concert_name, theme, COUNT(singer_id) AS number_of_singers FROM concert JOIN singer_in_concert ON concert.concert_id = '
 'singer_in_concert.concert_id GROUP BY concert_name, theme\n'
 'medium gold: SELECT T2.concert_name ,  T2.theme ,  count(*) FROM singer_in_concert AS T1 JOIN concert AS T2 ON T1.concert_id  =  T2.concert_id GROUP BY '
 'T2.concert_id\n'
 '\n'
 'eval_err_num:10\n'
 'medium pred: SELECT singer.name, COUNT(concert.concert_id) AS num_concerts FROM singer JOIN singer_in_concert ON singer.singer_id = '
 'singer_in_concert.singer_id JOIN concert ON singer_in_concert.concert_id = concert.concert_id GROUP BY singer.name;\n'
 'medium gold: SELECT T2.name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.singer_id\n'
 '\n'
 'eval_err_num:11\n'
 'medium pred: SELECT singer.name, COUNT(concert.concert_id) AS number_of_concerts FROM singer JOIN singer_in_concert ON singer.singer_id = '
 'singer_in_concert.singer_id JOIN concert ON singer_in_concert.concert_id = concert.concert_id GROUP BY singer.name;\n'
 'medium gold: SELECT T2.name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.singer_id\n'
 '\n'
 'eval_err_num:12\n'
 'extra pred: SELECT stadium.name, stadium.location FROM stadium INNER JOIN concert ON stadium.stadium_id = concert.stadium_id WHERE concert.year = 2014 AND '
 'concert.year = 2015\n'
 'extra gold: SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014 INTERSECT SELECT '
 'T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2015\n'
 '\n'
 'extra pred: SELECT name, location FROM stadium WHERE stadium_id IN (     SELECT stadium_id     FROM concert     WHERE year = 2014     INTERSECT     SELECT '
 'stadium_id     FROM concert     WHERE year = 2015 )\n'
 'extra gold: SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014 INTERSECT SELECT '
 'T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2015\n'
 '\n'
 'hard pred: SELECT COUNT(*) FROM concert WHERE stadium_id IN (SELECT stadium_id FROM stadium WHERE capacity = (SELECT MAX(capacity) FROM stadium))\n'
 'hard gold: SELECT count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id ORDER BY T2.Capacity DESC LIMIT 1\n'
 '\n'
 'hard pred: SELECT COUNT(*) FROM concert WHERE stadium_id = (SELECT stadium_id FROM stadium ORDER BY capacity DESC LIMIT 1)\n'
 'hard gold: SELECT count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id ORDER BY T2.Capacity DESC LIMIT 1\n'
 '\n'
 "medium pred: SELECT weight FROM pets WHERE pettype = 'dog' ORDER BY pet_age ASC LIMIT 1;\n"
 'medium gold: SELECT weight FROM pets ORDER BY pet_age LIMIT 1\n'
 '\n'
 "medium pred: SELECT MIN(weight) FROM pets WHERE pettype = 'dog'\n"
 'medium gold: SELECT weight FROM pets ORDER BY pet_age LIMIT 1\n'
 '\n'
 'eval_err_num:13\n'
 'medium pred: SELECT pettype, MAX(weight) AS max_weight FROM pets GROUP BY pettype;\n'
 'medium gold: SELECT max(weight) ,  petType FROM pets GROUP BY petType\n'
 '\n'
 'eval_err_num:14\n'
 'medium pred: SELECT pettype, MAX(weight) AS max_weight FROM pets GROUP BY pettype;\n'
 'medium gold: SELECT max(weight) ,  petType FROM pets GROUP BY petType\n'
 '\n'
 'medium pred: SELECT COUNT(petid) FROM has_pet WHERE stuid IN (SELECT stuid FROM student WHERE age > 20)\n'
 'medium gold: SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20\n'
 '\n'
 'medium pred: SELECT COUNT(petid) FROM has_pet WHERE stuid IN (SELECT stuid FROM student WHERE age > 20)\n'
 'medium gold: SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20\n'
 '\n'
 'eval_err_num:15\n'
 "hard pred: SELECT COUNT(*) FROM pets p JOIN has_pet hp ON p.petid = hp.petid JOIN student s ON hp.stuid = s.stuid WHERE p.pettype = 'dog' AND s.sex = 'F'\n"
 "hard gold: SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex  =  'F' AND "
 "T3.pettype  =  'dog'\n"
 '\n'
 'eval_err_num:16\n'
 "hard pred: SELECT COUNT(*) FROM pets p JOIN has_pet hp ON p.petid = hp.petid JOIN student s ON hp.stuid = s.stuid WHERE p.pettype = 'dog' AND s.sex = "
 "'female'\n"
 "hard gold: SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex  =  'F' AND "
 "T3.pettype  =  'dog'\n"
 '\n'
 "extra pred: SELECT fname FROM student WHERE stuid IN (SELECT stuid FROM has_pet WHERE petid IN (SELECT petid FROM pets WHERE pettype = 'cat' OR pettype = "
 "'dog'))\n"
 'extra gold: SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE '
 "T3.pettype  =  'cat' OR T3.pettype  =  'dog'\n"
 '\n'
 "extra pred: SELECT DISTINCT fname FROM student WHERE stuid IN (SELECT stuid FROM has_pet WHERE petid IN (SELECT petid FROM pets WHERE pettype = 'cat' OR "
 "pettype = 'dog'))\n"
 'extra gold: SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE '
 "T3.pettype  =  'cat' OR T3.pettype  =  'dog'\n"
 '\n'
 'extra pred: SELECT fname  FROM student  WHERE stuid IN (     SELECT stuid      FROM has_pet      WHERE petid IN (         SELECT petid          FROM '
 "pets          WHERE pettype = 'cat'     ) ) AND stuid IN (     SELECT stuid      FROM has_pet      WHERE petid IN (         SELECT petid          FROM "
 "pets          WHERE pettype = 'dog'     ) );\n"
 'extra gold: SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  '
 "'cat' INTERSECT SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  "
 "'dog'\n"
 '\n'
 'eval_err_num:17\n'
 "extra pred: SELECT DISTINCT s.fname FROM student s JOIN has_pet hp ON s.stuid = hp.stuid JOIN pets p ON hp.petid = p.petid WHERE p.pettype = 'cat' AND "
 's.stuid IN (     SELECT s.stuid     FROM student s     JOIN has_pet hp ON s.stuid = hp.stuid     JOIN pets p ON hp.petid = p.petid     WHERE p.pettype = '
 "'dog' )\n"
 'extra gold: SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  '
 "'cat' INTERSECT SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  "
 "'dog'\n"
 '\n'
 "extra pred: SELECT major, age FROM student WHERE stuid NOT IN (SELECT stuid FROM has_pet WHERE petid IN (SELECT petid FROM pets WHERE pettype = 'cat'))\n"
 'extra gold: SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS '
 "T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')\n"
 '\n'
 'extra pred: SELECT student.major, student.age FROM student WHERE student.stuid NOT IN (SELECT stuid FROM has_pet WHERE petid IN (SELECT petid FROM pets '
 "WHERE pettype = 'cat'))\n"
 'extra gold: SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS '
 "T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')\n"
 '\n'
 "hard pred: SELECT stuid FROM student WHERE stuid NOT IN (SELECT stuid FROM has_pet WHERE petid IN (SELECT petid FROM pets WHERE pettype = 'cat'))\n"
 'hard gold: SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  '
 "T2.petid WHERE T3.pettype  =  'cat'\n"
 '\n'
 'eval_err_num:18\n'
 'hard pred: SELECT stuid FROM student WHERE stuid NOT IN (   SELECT stuid   FROM has_pet   INNER JOIN pets ON has_pet.petid = pets.petid   WHERE pettype = '
 "'cat' )\n"
 'hard gold: SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  '
 "T2.petid WHERE T3.pettype  =  'cat'\n"
 '\n'
 'eval_err_num:19\n'
 'extra pred: SELECT fname, age FROM student WHERE stuid IN (     SELECT stuid     FROM has_pet     INNER JOIN pets ON has_pet.petid = pets.petid     WHERE '
 "pettype = 'dog' ) AND stuid NOT IN (     SELECT stuid     FROM has_pet     INNER JOIN pets ON has_pet.petid = pets.petid     WHERE pettype = 'cat' )\n"
 'extra gold: SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE '
 "T3.pettype  =  'dog' AND T1.stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  "
 "T2.petid WHERE T3.pettype  =  'cat')\n"
 '\n'
 'eval_err_num:20\n'
 'extra pred: SELECT fname FROM student WHERE stuid IN (     SELECT stuid     FROM has_pet     INNER JOIN pets ON has_pet.petid = pets.petid     WHERE pettype '
 "= 'dog' ) AND stuid NOT IN (     SELECT stuid     FROM has_pet     INNER JOIN pets ON has_pet.petid = pets.petid     WHERE pettype = 'cat' )\n"
 'extra gold: SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE '
 "T3.pettype  =  'dog' AND T1.stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  "
 "T2.petid WHERE T3.pettype  =  'cat')\n"
 '\n'
 'medium pred: SELECT pettype, weight FROM pets WHERE pet_age = (SELECT MIN(pet_age) FROM pets)\n'
 'medium gold: SELECT pettype ,  weight FROM pets ORDER BY pet_age LIMIT 1\n'
 '\n'
 'medium pred: SELECT pettype, weight FROM pets WHERE pet_age = (SELECT MIN(pet_age) FROM pets)\n'
 'medium gold: SELECT pettype ,  weight FROM pets ORDER BY pet_age LIMIT 1\n'
 '\n'
 'eval_err_num:21\n'
 'medium pred: SELECT pettype, AVG(weight) AS average_weight FROM pets GROUP BY pettype\n'
 'medium gold: SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype\n'
 '\n'
 'medium pred: SELECT fname, age FROM student WHERE stuid IN (SELECT stuid FROM has_pet)\n'
 'medium gold: SELECT DISTINCT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid\n'
 '\n'
 'medium pred: SELECT fname, age FROM student WHERE stuid IN (SELECT stuid FROM has_pet)\n'
 'medium gold: SELECT DISTINCT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid\n'
 '\n'
 "medium pred: SELECT petid FROM has_pet WHERE stuid IN (SELECT stuid FROM student WHERE lname = 'Smith')\n"
 "medium gold: SELECT T2.petid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.Lname  =  'Smith'\n"
 '\n'
 "medium pred: SELECT petid FROM has_pet WHERE stuid = (     SELECT stuid     FROM student     WHERE lname = 'Smith' )\n"
 "medium gold: SELECT T2.petid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.Lname  =  'Smith'\n"
 '\n'
 'eval_err_num:22\n'
 'medium pred: SELECT student.stuid, COUNT(pets.petid) AS num_pets FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = '
 'pets.petid GROUP BY student.stuid\n'
 'medium gold: SELECT count(*) ,  T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid\n'
 '\n'
 'eval_err_num:23\n'
 'medium pred: SELECT student.stuid, COUNT(pets.petid) AS num_pets FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = '
 'pets.petid GROUP BY student.stuid;\n'
 'medium gold: SELECT count(*) ,  T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid\n'
 '\n'
 'medium pred: SELECT fname, sex FROM student WHERE stuid IN (     SELECT stuid     FROM has_pet     GROUP BY stuid     HAVING COUNT(petid) > 1 )\n'
 'medium gold: SELECT T1.fname ,  T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid HAVING count(*)  >  1\n'
 '\n'
 'medium pred: SELECT fname, sex FROM student WHERE stuid IN (     SELECT stuid     FROM has_pet     GROUP BY stuid     HAVING COUNT(petid) > 1 )\n'
 'medium gold: SELECT T1.fname ,  T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid HAVING count(*)  >  1\n'
 '\n'
 'eval_err_num:24\n'
 "hard pred: SELECT s.lname FROM student s JOIN has_pet hp ON s.stuid = hp.stuid JOIN pets p ON hp.petid = p.petid WHERE p.pettype = 'cat' AND p.pet_age = 3 "
 'LIMIT 1;\n'
 'hard gold: SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 '
 "AND T3.pettype  =  'cat'\n"
 '\n'
 'eval_err_num:25\n'
 "hard pred: SELECT s.lname FROM student s JOIN has_pet hp ON s.stuid = hp.stuid JOIN pets p ON hp.petid = p.petid WHERE p.pettype = 'cat' AND p.pet_age = 3 "
 'LIMIT 1;\n'
 'hard gold: SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 '
 "AND T3.pettype  =  'cat'\n"
 '\n'
 'extra pred: SELECT AVG(age) FROM student WHERE stuid NOT IN (SELECT stuid FROM has_pet)\n'
 'extra gold: SELECT avg(age) FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid)\n'
 '\n'
 'extra pred: SELECT AVG(age) FROM student WHERE stuid NOT IN (SELECT stuid FROM has_pet)\n'
 'extra gold: SELECT avg(age) FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid)\n'
 '\n'
 'eval_err_num:26\n'
 'medium pred: SELECT continents.contid, continents.continent, COUNT(countries.countryid) AS num_countries FROM continents JOIN countries ON continents.contid '
 '= countries.continent GROUP BY continents.contid, continents.continent\n'
 'medium gold: SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId;\n'
 '\n'
 'eval_err_num:27\n'
 'medium pred: SELECT continents.contid, continents.continent, COUNT(countries.countryid) AS num_countries FROM continents JOIN countries ON continents.contid '
 '= countries.continent GROUP BY continents.contid, continents.continent\n'
 'medium gold: SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId;\n'
 '\n'
 'eval_err_num:28\n'
 'medium pred: SELECT car_makers.fullname, car_makers.id, COUNT(model_list.modelid) AS number FROM car_makers JOIN model_list ON car_makers.id = '
 'model_list.maker GROUP BY car_makers.fullname, car_makers.id\n'
 'medium gold: SELECT T1.FullName ,  T1.Id ,  count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;\n'
 '\n'
 'eval_err_num:29\n'
 'medium pred: SELECT car_makers.id, car_makers.fullname, COUNT(model_list.modelid) AS num_models FROM car_makers LEFT JOIN model_list ON car_makers.maker = '
 'model_list.maker GROUP BY car_makers.id, car_makers.fullname\n'
 'medium gold: SELECT T1.FullName ,  T1.Id ,  count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;\n'
 '\n'
 'eval_err_num:30\n'
 'hard pred: SELECT model FROM cars_data WHERE horsepower = (SELECT MIN(horsepower) FROM cars_data)\n'
 'hard gold: SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;\n'
 '\n'
 'eval_err_num:31\n'
 'hard pred: SELECT model FROM cars_data WHERE horsepower = (SELECT MIN(horsepower) FROM cars_data)\n'
 'hard gold: SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;\n'
 '\n'
 'eval_err_num:32\n'
 'extra pred: SELECT model FROM cars_data WHERE weight < (SELECT AVG(weight) FROM cars_data)\n'
 'extra gold: SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA)\n'
 '\n'
 'eval_err_num:33\n'
 'extra pred: SELECT model FROM cars_data WHERE weight < (SELECT AVG(weight) FROM cars_data)\n'
 'extra gold: SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA)\n'
 '\n'
 'extra pred: SELECT DISTINCT car_makers.maker FROM car_makers JOIN cars_data ON car_makers.id = cars_data.id WHERE cars_data.year = 1970\n'
 'extra gold: SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN '
 "CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970';\n"
 '\n'
 'extra pred: SELECT DISTINCT car_makers.maker FROM car_makers JOIN cars_data ON car_makers.id = cars_data.id WHERE cars_data.year = 1970\n'
 'extra gold: SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN '
 "CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970';\n"
 '\n'
 'extra pred: SELECT maker, year FROM car_makers JOIN cars_data ON car_makers.id = cars_data.id ORDER BY year ASC LIMIT 1;\n'
 'extra gold: SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA);\n'
 '\n'
 'eval_err_num:34\n'
 'hard pred: SELECT DISTINCT model FROM model_list WHERE modelid IN (     SELECT makeid     FROM car_names     WHERE year > 1980 )\n'
 'hard gold: SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE '
 'T3.year  >  1980;\n'
 '\n'
 'hard pred: SELECT DISTINCT model FROM model_list WHERE modelid IN (     SELECT makeid     FROM car_names     WHERE makeid IN (         SELECT id         '
 'FROM car_makers         WHERE id IN (             SELECT id             FROM cars_data             WHERE year > 1980         )     ) )\n'
 'hard gold: SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE '
 'T3.year  >  1980;\n'
 '\n'
 'eval_err_num:35\n'
 'hard pred: SELECT c.continent, COUNT(cm.id) AS count FROM continents c LEFT JOIN countries co ON c.contid = co.continent LEFT JOIN car_makers cm ON '
 'co.countryid = cm.country GROUP BY c.continent;\n'
 'hard gold: SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  '
 '=  T3.Country GROUP BY T1.Continent;\n'
 '\n'
 'eval_err_num:36\n'
 'hard pred: SELECT continents.continent, COUNT(car_makers.id) AS car_makers_count FROM continents LEFT JOIN countries ON continents.contid = '
 'countries.continent LEFT JOIN car_makers ON countries.countryid = car_makers.country GROUP BY continents.continent;\n'
 'hard gold: SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  '
 '=  T3.Country GROUP BY T1.Continent;\n'
 '\n'
 'eval_err_num:37\n'
 'extra pred: SELECT countryname FROM countries WHERE countryid IN (     SELECT country     FROM car_makers     GROUP BY country     HAVING COUNT(DISTINCT '
 'maker) = (         SELECT MAX(num_car_makers)         FROM (             SELECT COUNT(DISTINCT maker) AS num_car_makers             FROM '
 'car_makers             GROUP BY country         ) AS car_makers_count     ) )\n'
 'extra gold: SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) DESC LIMIT '
 '1;\n'
 '\n'
 'extra pred: SELECT countryname  FROM countries  WHERE countryid = (     SELECT country      FROM car_makers      GROUP BY country      ORDER BY COUNT(*) '
 'DESC      LIMIT 1 )\n'
 'extra gold: SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) DESC LIMIT '
 '1;\n'
 '\n'
 'eval_err_num:38\n'
 'medium pred: SELECT car_makers.fullname, COUNT(model_list.modelid) AS count FROM car_makers JOIN model_list ON car_makers.id = model_list.maker GROUP BY '
 'car_makers.fullname\n'
 'medium gold: SELECT Count(*) ,  T2.FullName ,  T2.id FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id GROUP BY T2.id;\n'
 '\n'
 'eval_err_num:39\n'
 'medium pred: SELECT car_makers.id, car_makers.fullname, COUNT(model_list.modelid) AS num_car_models FROM car_makers LEFT JOIN model_list ON car_makers.maker '
 '= model_list.maker GROUP BY car_makers.id, car_makers.fullname\n'
 'medium gold: SELECT Count(*) ,  T2.FullName ,  T2.id FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id GROUP BY T2.id;\n'
 '\n'
 'medium pred: SELECT accelerate  FROM cars_data  JOIN car_names ON cars_data.id = car_names.makeid  JOIN model_list ON car_names.model = model_list.model  '
 "JOIN car_makers ON model_list.maker = car_makers.maker  WHERE car_makers.fullname = 'amc hornet sportabout (sw)'\n"
 "medium gold: SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';\n"
 '\n'
 "medium pred: SELECT accelerate FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid WHERE car_names.model = 'amc hornet sportabout (sw)'\n"
 "medium gold: SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';\n"
 '\n'
 'medium pred: SELECT COUNT(DISTINCT car_makers.id)  FROM car_makers  JOIN countries ON car_makers.country = countries.countryid  WHERE countries.countryname '
 "= 'france'\n"
 "medium gold: SELECT count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName  =  'france';\n"
 '\n'
 "medium pred: SELECT COUNT(DISTINCT maker) FROM car_makers WHERE country = 'France'\n"
 "medium gold: SELECT count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName  =  'france';\n"
 '\n'
 "hard pred: SELECT COUNT(DISTINCT modelid)  FROM model_list  WHERE maker IN (SELECT id FROM car_makers WHERE country = 'usa')\n"
 'hard gold: SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE '
 "T3.CountryName  =  'usa';\n"
 '\n'
 "hard pred: SELECT COUNT(DISTINCT modelid)  FROM model_list  WHERE maker IN (SELECT id FROM car_makers WHERE country = 'United States')\n"
 'hard gold: SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE '
 "T3.CountryName  =  'usa';\n"
 '\n'
 'hard pred: SELECT MIN(weight) FROM cars_data WHERE cylinders = 8 AND year = 1974;\n'
 'hard gold: SELECT Weight FROM CARS_DATA WHERE Cylinders  =  4 AND YEAR  =  1974 ORDER BY Weight ASC LIMIT 1;\n'
 '\n'
 'hard pred: SELECT MIN(weight) FROM cars_data WHERE cylinders = 8 AND year = 1974;\n'
 'hard gold: SELECT Weight FROM CARS_DATA WHERE Cylinders  =  4 AND YEAR  =  1974 ORDER BY Weight ASC LIMIT 1;\n'
 '\n'
 'medium pred: SELECT maker, model FROM car_makers JOIN model_list ON car_makers.id = model_list.maker\n'
 'medium gold: SELECT Maker ,  Model FROM MODEL_LIST;\n'
 '\n'
 'eval_err_num:40\n'
 'medium pred: SELECT maker, model FROM car_makers, model_list WHERE car_makers.id = model_list.maker\n'
 'medium gold: SELECT Maker ,  Model FROM MODEL_LIST;\n'
 '\n'
 'eval_err_num:41\n'
 'medium pred: SELECT DISTINCT countries.countryid, countries.countryname FROM countries INNER JOIN car_makers ON countries.countryid = car_makers.countryid\n'
 'medium gold: SELECT T1.CountryName ,  T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING '
 'count(*)  >=  1;\n'
 '\n'
 'medium pred: SELECT countryid, countryname FROM countries WHERE countryid IN (SELECT DISTINCT country                     FROM car_makers)\n'
 'medium gold: SELECT T1.CountryName ,  T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING '
 'count(*)  >=  1;\n'
 '\n'
 'eval_err_num:42\n'
 'medium pred: SELECT year, AVG(weight) AS average_weight, year FROM cars_data GROUP BY year\n'
 'medium gold: SELECT avg(Weight) ,  YEAR FROM CARS_DATA GROUP BY YEAR;\n'
 '\n'
 'eval_err_num:43\n'
 "extra pred: SELECT DISTINCT c.countryname FROM countries c JOIN car_makers cm ON c.countryid = cm.country WHERE c.continent = 'Europe' GROUP BY "
 'c.countryname HAVING COUNT(DISTINCT cm.maker) >= 3\n'
 'extra gold: SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  '
 "T3.Country WHERE T2.Continent  =  'europe' GROUP BY T1.CountryName HAVING count(*)  >=  3;\n"
 '\n'
 "extra pred: SELECT countryname FROM countries WHERE continent = 'Europe' GROUP BY countryname HAVING COUNT(DISTINCT countryid) >= 3\n"
 'extra gold: SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  '
 "T3.Country WHERE T2.Continent  =  'europe' GROUP BY T1.CountryName HAVING count(*)  >=  3;\n"
 '\n'
 'extra pred: SELECT MAX(horsepower), make FROM cars_data JOIN model_list ON cars_data.id = model_list.modelid JOIN car_names ON model_list.maker = '
 'car_names.makeid WHERE cylinders = 3 GROUP BY make\n'
 'extra gold: SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3 ORDER BY T2.horsepower '
 'DESC LIMIT 1;\n'
 '\n'
 'extra pred: SELECT MAX(horsepower), maker FROM cars_data JOIN model_list ON cars_data.id = model_list.modelid WHERE cylinders = 3 GROUP BY maker ORDER BY '
 'MAX(horsepower) DESC LIMIT 1;\n'
 'extra gold: SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3 ORDER BY T2.horsepower '
 'DESC LIMIT 1;\n'
 '\n'
 'eval_err_num:44\n'
 'hard pred: SELECT model FROM cars_data WHERE mpg = (SELECT MAX(mpg) FROM cars_data)\n'
 'hard gold: SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.mpg DESC LIMIT 1;\n'
 '\n'
 'eval_err_num:45\n'
 'hard pred: SELECT model FROM cars_data ORDER BY mpg DESC LIMIT 1;\n'
 'hard gold: SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.mpg DESC LIMIT 1;\n'
 '\n'
 'eval_err_num:46\n'
 "medium pred: SELECT AVG(edispl) FROM cars_data WHERE id IN (SELECT id FROM car_names WHERE makeid = (SELECT id FROM car_makers WHERE maker = 'volvo'))\n"
 "medium gold: SELECT avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T1.Model  =  'volvo';\n"
 '\n'
 'eval_err_num:47\n'
 "medium pred: SELECT AVG(edispl) FROM cars_data WHERE id IN (SELECT id FROM car_names WHERE makeid IN (SELECT id FROM car_makers WHERE maker = 'volvo'))\n"
 "medium gold: SELECT avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T1.Model  =  'volvo';\n"
 '\n'
 'medium pred: SELECT MAX(accelerate) FROM cars_data GROUP BY cylinders;\n'
 'medium gold: SELECT max(Accelerate) ,  Cylinders FROM CARS_DATA GROUP BY Cylinders;\n'
 '\n'
 'eval_err_num:48\n'
 'hard pred: SELECT model FROM model_list GROUP BY model HAVING COUNT(DISTINCT maker) = (     SELECT MAX(version_count)     FROM (         SELECT '
 'COUNT(DISTINCT makeid) AS version_count         FROM car_names         GROUP BY model     ) AS version_counts )\n'
 'hard gold: SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1;\n'
 '\n'
 'eval_err_num:49\n'
 'hard pred: SELECT model FROM model_list GROUP BY model HAVING COUNT(DISTINCT maker) = (     SELECT MAX(version_count)     FROM (         SELECT model, '
 'COUNT(DISTINCT maker) AS version_count         FROM model_list         GROUP BY model     ) AS version_counts )\n'
 'hard gold: SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1;\n'
 '\n'
 "medium pred: SELECT COUNT(DISTINCT modelid)  FROM model_list  WHERE maker = 'American Motor Company'\n"
 "medium gold: SELECT count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker WHERE T1.FullName  =  'American Motor Company';\n"
 '\n'
 "medium pred: SELECT COUNT(*) FROM model_list WHERE maker = 'American Motor Company'\n"
 "medium gold: SELECT count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker WHERE T1.FullName  =  'American Motor Company';\n"
 '\n'
 'eval_err_num:50\n'
 'medium pred: SELECT fullname, id FROM car_makers GROUP BY fullname, id HAVING COUNT(DISTINCT model) > 3\n'
 'medium gold: SELECT T1.FullName ,  T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3;\n'
 '\n'
 'eval_err_num:51\n'
 'medium pred: SELECT id, maker FROM car_makers GROUP BY id, maker HAVING COUNT(DISTINCT model) > 3\n'
 'medium gold: SELECT T1.FullName ,  T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3;\n'
 '\n'
 'eval_err_num:52\n'
 "extra pred: SELECT DISTINCT model FROM model_list WHERE maker IN (SELECT maker FROM car_makers WHERE fullname = 'General Motors') AND modelid IN (SELECT "
 'makeid FROM car_names WHERE weight > 3500)\n'
 'extra gold: SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN '
 "CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' OR T4.weight  >  3500;\n"
 '\n'
 'eval_err_num:53\n'
 "extra pred: SELECT DISTINCT model FROM model_list WHERE maker = 'General Motors' OR weight > 3500;\n"
 'extra gold: SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN '
 "CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' OR T4.weight  >  3500;\n"
 '\n'
 'medium pred: SELECT DISTINCT year FROM cars_data WHERE weight >= 3000 AND weight <= 4000;\n'
 'medium gold: SELECT DISTINCT T1.Year FROM CARS_DATA AS T1 WHERE T1.Weight  >  3000 AND T1.weight  <  4000;\n'
 '\n'
 'medium pred: SELECT horsepower  FROM cars_data  WHERE accelerate = (SELECT MAX(accelerate) FROM cars_data)\n'
 'medium gold: SELECT T1.horsepower FROM CARS_DATA AS T1 ORDER BY T1.accelerate DESC LIMIT 1;\n'
 '\n'
 'medium pred: SELECT horsepower  FROM cars_data  WHERE accelerate = (SELECT MAX(accelerate) FROM cars_data)\n'
 'medium gold: SELECT T1.horsepower FROM CARS_DATA AS T1 ORDER BY T1.accelerate DESC LIMIT 1;\n'
 '\n'
 'eval_err_num:54\n'
 "extra pred: SELECT MIN(cylinders) FROM cars_data WHERE id IN (SELECT id FROM model_list WHERE maker = 'volvo') AND accelerate = (SELECT MIN(accelerate) FROM "
 "cars_data WHERE id IN (SELECT id FROM model_list WHERE maker = 'volvo'))\n"
 "extra gold: SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT "
 '1;\n'
 '\n'
 'eval_err_num:55\n'
 "extra pred: SELECT MIN(cylinders) FROM cars_data WHERE id IN (SELECT id FROM car_names WHERE model = 'volvo') AND accelerate = (SELECT MIN(accelerate) FROM "
 "cars_data WHERE id IN (SELECT id FROM car_names WHERE model = 'volvo'))\n"
 "extra gold: SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT "
 '1;\n'
 '\n'
 'hard pred: SELECT COUNT(*) FROM cars_data WHERE accelerate > (SELECT MAX(horsepower) FROM cars_data)\n'
 'hard gold: SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );\n'
 '\n'
 'hard pred: SELECT COUNT(*) FROM cars_data WHERE accelerate > (SELECT MAX(horsepower) FROM cars_data)\n'
 'hard gold: SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );\n'
 '\n'
 'eval_err_num:56\n'
 'easy pred: SELECT COUNT(DISTINCT countryid) FROM countries WHERE countryid IN (   SELECT countryid FROM car_makers   GROUP BY countryid   HAVING '
 'COUNT(DISTINCT id) > 2 )\n'
 'easy gold: SELECT COUNT(*) FROM ( SELECT T1.CountryId ,  COUNT(*) FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY '
 'T1.CountryId HAVING count(*)  >  2 );\n'
 '\n'
 'easy pred: SELECT COUNT(DISTINCT countries.countryid)  FROM countries  JOIN car_makers ON countries.countryid = car_makers.country  GROUP BY '
 'countries.countryid  HAVING COUNT(DISTINCT car_makers.id) > 2\n'
 'easy gold: SELECT COUNT(*) FROM ( SELECT T1.CountryId ,  COUNT(*) FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY '
 'T1.CountryId HAVING count(*)  >  2 );\n'
 '\n'
 'eval_err_num:57\n'
 'extra pred: SELECT model FROM cars_data WHERE cylinders = 4 ORDER BY horsepower DESC LIMIT 1;\n'
 'extra gold: SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1;\n'
 '\n'
 'eval_err_num:58\n'
 'extra pred: SELECT model FROM cars_data WHERE cylinders = 4 ORDER BY horsepower DESC LIMIT 1;\n'
 'extra gold: SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1;\n'
 '\n'
 'eval_err_num:59\n'
 'extra pred: SELECT makeid, make FROM car_names WHERE horsepower > (SELECT MIN(horsepower) FROM cars_data) AND cylinders <= 3;\n'
 'extra gold: SELECT T2.MakeId ,  T2.Make FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Horsepower  >  (SELECT min(Horsepower) '
 'FROM CARS_DATA) AND T1.Cylinders  <=  3;\n'
 '\n'
 'eval_err_num:60\n'
 'extra pred: SELECT makeid, make FROM car_names WHERE cylinders < 4 AND horsepower > (SELECT MIN(horsepower) FROM cars_data)\n'
 'extra gold: SELECT T2.MakeId ,  T2.Make FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Horsepower  >  (SELECT min(Horsepower) '
 'FROM CARS_DATA) AND T1.Cylinders  <=  3;\n'
 '\n'
 'extra pred: SELECT MAX(mpg) FROM cars_data WHERE cylinders = 8 AND year < 1980;\n'
 'extra gold: SELECT mpg FROM CARS_DATA WHERE Cylinders  =  8 OR YEAR  <  1980 ORDER BY mpg DESC LIMIT 1;\n'
 '\n'
 'extra pred: SELECT MAX(mpg) FROM cars_data WHERE cylinders = 8 OR year < 1980;\n'
 'extra gold: SELECT mpg FROM CARS_DATA WHERE Cylinders  =  8 OR YEAR  <  1980 ORDER BY mpg DESC LIMIT 1;\n'
 '\n'
 'eval_err_num:61\n'
 'extra pred: SELECT model FROM model_list WHERE modelid IN (     SELECT makeid     FROM car_names     WHERE makeid IN (         SELECT id         FROM '
 "car_makers         WHERE maker <> 'Ford Motor Company'     ) ) AND modelid IN (     SELECT id     FROM cars_data     WHERE weight < 3500 )\n"
 'extra gold: SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN '
 "CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != 'Ford Motor Company';\n"
 '\n'
 'eval_err_num:62\n'
 "extra pred: SELECT model FROM model_list WHERE modelid NOT IN (   SELECT modelid   FROM cars_data   WHERE weight >= 3500 ) AND maker <> 'Ford Motor "
 "Company'\n"
 'extra gold: SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN '
 "CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != 'Ford Motor Company';\n"
 '\n'
 'hard pred: SELECT countryname FROM countries WHERE countryid NOT IN (SELECT DISTINCT country FROM car_makers)\n'
 'hard gold: SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country;\n'
 '\n'
 'hard pred: SELECT countryname  FROM countries  WHERE countryid NOT IN (SELECT DISTINCT country FROM car_makers)\n'
 'hard gold: SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country;\n'
 '\n'
 'eval_err_num:63\n'
 'extra pred: SELECT id, maker FROM car_makers GROUP BY id, maker HAVING COUNT(DISTINCT model) >= 2 AND COUNT(DISTINCT maker) > 3\n'
 'extra gold: SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >=  2 INTERSECT '
 'SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model GROUP BY T1.Id '
 'HAVING count(*)  >  3;\n'
 '\n'
 'extra pred: SELECT id, maker FROM car_makers WHERE id IN (     SELECT maker     FROM model_list     GROUP BY maker     HAVING COUNT(DISTINCT modelid) >= 2 ) '
 'AND id IN (     SELECT makeid     FROM car_names     GROUP BY makeid     HAVING COUNT(DISTINCT model) > 3 )\n'
 'extra gold: SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >=  2 INTERSECT '
 'SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model GROUP BY T1.Id '
 'HAVING count(*)  >  3;\n'
 '\n'
 'eval_err_num:64\n'
 'extra pred: SELECT countryid, countryname  FROM countries  WHERE countryid IN (     SELECT country      FROM car_makers      GROUP BY country      HAVING '
 "COUNT(DISTINCT maker) > 3 ) OR countryid IN (     SELECT country      FROM car_names      WHERE model = 'fiat' )\n"
 'extra gold: SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.countryId HAVING '
 'count(*)  >  3 UNION SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country JOIN MODEL_LIST AS T3 '
 "ON T2.Id  =  T3.Maker WHERE T3.Model  =  'fiat';\n"
 '\n'
 'eval_err_num:65\n'
 'extra pred: SELECT countryid, countryname FROM countries WHERE countryid IN (     SELECT country     FROM car_makers     GROUP BY country     HAVING '
 "COUNT(DISTINCT maker) > 3 ) OR countryid IN (     SELECT country     FROM car_names     WHERE make = 'fiat' )\n"
 'extra gold: SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.countryId HAVING '
 'count(*)  >  3 UNION SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country JOIN MODEL_LIST AS T3 '
 "ON T2.Id  =  T3.Maker WHERE T3.Model  =  'fiat';\n"
 '\n'
 "medium pred: SELECT COUNT(*) FROM flights WHERE sourceairport = 'Aberdeen';\n"
 'medium gold: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  "Aberdeen"\n'
 '\n'
 "medium pred: SELECT COUNT(*) FROM flights WHERE sourceairport = 'Aberdeen';\n"
 'medium gold: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  "Aberdeen"\n'
 '\n'
 "medium pred: SELECT COUNT(*) FROM flights WHERE destairport = 'Aberdeen'\n"
 'medium gold: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  "Aberdeen"\n'
 '\n'
 "hard pred: SELECT COUNT(*) FROM flights WHERE sourceairport = 'Aberdeen' AND destairport = 'Ashley'\n"
 'hard gold: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  '
 'T3.AirportCode WHERE T2.City  =  "Ashley" AND T3.City  =  "Aberdeen"\n'
 '\n'
 "hard pred: SELECT COUNT(*) FROM flights WHERE sourceairport = 'Aberdeen' AND destairport = 'Ashley'\n"
 'hard gold: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  '
 'T3.AirportCode WHERE T2.City  =  "Ashley" AND T3.City  =  "Aberdeen"\n'
 '\n'
 "medium pred: SELECT COUNT(*) FROM flights WHERE airline = 'JetBlue Airways'\n"
 'medium gold: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = "JetBlue Airways"\n'
 '\n'
 "medium pred: SELECT COUNT(*) FROM flights WHERE airline = 'Jetblue Airways'\n"
 'medium gold: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = "JetBlue Airways"\n'
 '\n'
 "medium pred: SELECT COUNT(*) FROM flights WHERE airline = 'United Airlines' AND destairport = 'ASY'\n"
 'medium gold: SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  "United Airlines" AND T2.DestAirport  =  '
 '"ASY"\n'
 '\n'
 "medium pred: SELECT COUNT(*) FROM flights WHERE airline = 'United Airlines' AND destairport = 'ASY';\n"
 'medium gold: SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  "United Airlines" AND T2.DestAirport  =  '
 '"ASY"\n'
 '\n'
 "medium pred: SELECT COUNT(*) FROM flights WHERE airline = 'United Airlines' AND sourceairport = 'AHD'\n"
 'medium gold: SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  "United Airlines" AND T2.SourceAirport  =  '
 '"AHD"\n'
 '\n'
 "medium pred: SELECT COUNT(*) FROM flights WHERE airline = 'United Airlines' AND sourceairport = 'AHD';\n"
 'medium gold: SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  "United Airlines" AND T2.SourceAirport  =  '
 '"AHD"\n'
 '\n'
 "hard pred: SELECT COUNT(*) FROM flights  WHERE airline = 'United Airlines' AND destairport = 'Aberdeen'\n"
 'hard gold: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid  =  T1.Airline WHERE '
 'T2.City  =  "Aberdeen" AND T3.Airline  =  "United Airlines"\n'
 '\n'
 "hard pred: SELECT COUNT(*) FROM flights WHERE airline = 'United Airlines' AND destairport = 'Aberdeen';\n"
 'hard gold: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid  =  T1.Airline WHERE '
 'T2.City  =  "Aberdeen" AND T3.Airline  =  "United Airlines"\n'
 '\n'
 'eval_err_num:66\n'
 'extra pred: SELECT destairport AS city FROM flights GROUP BY destairport ORDER BY COUNT(*) DESC LIMIT 1;\n'
 'extra gold: SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1\n'
 '\n'
 'eval_err_num:67\n'
 'extra pred: SELECT sourceairport AS city FROM flights GROUP BY sourceairport ORDER BY COUNT(destairport) DESC LIMIT 1;\n'
 'extra gold: SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1\n'
 '\n'
 'eval_err_num:68\n'
 'extra pred: SELECT sourceairport AS city FROM flights GROUP BY sourceairport ORDER BY COUNT(*) DESC LIMIT 1;\n'
 'extra gold: SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1\n'
 '\n'
 'eval_err_num:69\n'
 'extra pred: SELECT sourceairport AS city FROM flights GROUP BY sourceairport ORDER BY COUNT(*) DESC LIMIT 1;\n'
 'extra gold: SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1\n'
 '\n'
 'eval_err_num:70\n'
 'extra pred: SELECT airportcode FROM airports WHERE airportcode IN (     SELECT sourceairport     FROM flights     GROUP BY sourceairport     HAVING COUNT(*) '
 '= (         SELECT MAX(flight_count)         FROM (             SELECT sourceairport, COUNT(*) as flight_count             FROM flights             GROUP BY '
 'sourceairport         ) AS flight_counts     ) ) OR airportcode IN (     SELECT destairport     FROM flights     GROUP BY destairport     HAVING COUNT(*) = '
 '(         SELECT MAX(flight_count)         FROM (             SELECT destairport, COUNT(*) as flight_count             FROM flights             GROUP BY '
 'destairport         ) AS flight_counts     ) )\n'
 'extra gold: SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP '
 'BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1\n'
 '\n'
 'extra pred: SELECT airportcode  FROM airports  WHERE airportcode = (     SELECT destairport      FROM flights      GROUP BY destairport      ORDER BY '
 'COUNT(*) DESC      LIMIT 1 )\n'
 'extra gold: SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP '
 'BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1\n'
 '\n'
 'eval_err_num:71\n'
 'extra pred: SELECT airportcode FROM airports WHERE airportcode IN (     SELECT sourceairport     FROM flights     GROUP BY sourceairport     HAVING COUNT(*) '
 '= (         SELECT MIN(flight_count)         FROM (             SELECT COUNT(*) AS flight_count             FROM flights             GROUP BY '
 'sourceairport         ) AS subquery     ) ) OR airportcode IN (     SELECT destairport     FROM flights     GROUP BY destairport     HAVING COUNT(*) = '
 '(         SELECT MIN(flight_count)         FROM (             SELECT COUNT(*) AS flight_count             FROM flights             GROUP BY '
 'destairport         ) AS subquery     ) ) LIMIT 1;\n'
 'extra gold: SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP '
 'BY T1.AirportCode ORDER BY count(*) LIMIT 1\n'
 '\n'
 'eval_err_num:72\n'
 'extra pred: SELECT airportcode FROM airports WHERE airportcode IN (     SELECT sourceairport     FROM flights     GROUP BY sourceairport     HAVING COUNT(*) '
 '= (         SELECT MIN(count)         FROM (             SELECT COUNT(*) as count             FROM flights             GROUP BY sourceairport         ) AS '
 'subquery     ) ) OR airportcode IN (     SELECT destairport     FROM flights     GROUP BY destairport     HAVING COUNT(*) = (         SELECT '
 'MIN(count)         FROM (             SELECT COUNT(*) as count             FROM flights             GROUP BY destairport         ) AS subquery     ) ) LIMIT '
 '1;\n'
 'extra gold: SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP '
 'BY T1.AirportCode ORDER BY count(*) LIMIT 1\n'
 '\n'
 'extra pred: SELECT airline FROM flights GROUP BY airline ORDER BY COUNT(*) DESC LIMIT 1;\n'
 'extra gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1\n'
 '\n'
 'extra pred: SELECT airline FROM flights GROUP BY airline ORDER BY COUNT(*) DESC LIMIT 1;\n'
 'extra gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1\n'
 '\n'
 'extra pred: SELECT abbreviation, country FROM airlines WHERE uid = (   SELECT airline   FROM flights   GROUP BY airline   ORDER BY COUNT(*) ASC   LIMIT 1 )\n'
 'extra gold: SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT '
 '1\n'
 '\n'
 'extra pred: SELECT abbreviation, country FROM airlines WHERE uid = (   SELECT airline   FROM flights   GROUP BY airline   ORDER BY COUNT(*) ASC   LIMIT 1 )\n'
 'extra gold: SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT '
 '1\n'
 '\n'
 "medium pred: SELECT DISTINCT airline FROM flights WHERE sourceairport = 'AHD'\n"
 'medium gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "AHD"\n'
 '\n'
 'medium pred: SELECT DISTINCT airlines.airline FROM airlines JOIN flights ON airlines.uid = flights.airline JOIN airports ON flights.destairport = '
 "airports.airportcode WHERE airports.airportcode = 'AHD'\n"
 'medium gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  =  "AHD"\n'
 '\n'
 "medium pred: SELECT airline FROM flights WHERE destairport = 'AHD'\n"
 'medium gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  =  "AHD"\n'
 '\n'
 "extra pred: SELECT airline  FROM airlines  WHERE airline IN (     SELECT airline      FROM flights      WHERE sourceairport = 'APG' )  AND airline IN (     "
 "SELECT airline      FROM flights      WHERE sourceairport = 'CVO' )\n"
 'extra gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "APG" INTERSECT SELECT T1.Airline '
 'FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "CVO"\n'
 '\n'
 'eval_err_num:73\n'
 "extra pred: SELECT DISTINCT airline FROM flights WHERE sourceairport IN ('APG', 'CVO') GROUP BY airline HAVING COUNT(DISTINCT sourceairport) = 2;\n"
 'extra gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "APG" INTERSECT SELECT T1.Airline '
 'FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "CVO"\n'
 '\n'
 "extra pred: SELECT airline FROM airlines WHERE airline IN (     SELECT airline     FROM flights     WHERE sourceairport = 'CVO' ) AND airline NOT IN (     "
 "SELECT airline     FROM flights     WHERE sourceairport = 'APG' )\n"
 'extra gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "CVO" EXCEPT SELECT T1.Airline FROM '
 'AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "APG"\n'
 '\n'
 "extra pred: SELECT DISTINCT airline FROM airlines WHERE airline IN (     SELECT DISTINCT airline     FROM flights     WHERE sourceairport = 'CVO' ) AND "
 "airline NOT IN (     SELECT DISTINCT airline     FROM flights     WHERE sourceairport = 'APG' )\n"
 'extra gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "CVO" EXCEPT SELECT T1.Airline FROM '
 'AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "APG"\n'
 '\n'
 'medium pred: SELECT airline FROM airlines GROUP BY airline HAVING COUNT(*) >= 10\n'
 'medium gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >  10\n'
 '\n'
 'medium pred: SELECT airline FROM flights GROUP BY airline HAVING COUNT(*) >= 10\n'
 'medium gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >  10\n'
 '\n'
 'medium pred: SELECT airline FROM airlines WHERE airline IN (     SELECT airline     FROM flights     GROUP BY airline     HAVING COUNT(*) < 200 )\n'
 'medium gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200\n'
 '\n'
 'medium pred: SELECT airline FROM airlines WHERE uid IN (     SELECT airline     FROM flights     GROUP BY airline     HAVING COUNT(*) < 200 )\n'
 'medium gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200\n'
 '\n'
 "medium pred: SELECT flightno FROM flights WHERE airline = 'United Airlines'\n"
 'medium gold: SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid  =  T1.Airline WHERE T2.Airline  =  "United Airlines"\n'
 '\n'
 "medium pred: SELECT flightno FROM flights WHERE airline = 'United Airlines'\n"
 'medium gold: SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid  =  T1.Airline WHERE T2.Airline  =  "United Airlines"\n'
 '\n'
 "medium pred: SELECT flightno FROM flights WHERE sourceairport = 'Aberdeen'\n"
 'medium gold: SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport   =  T2.AirportCode WHERE T2.City  =  "Aberdeen"\n'
 '\n'
 "medium pred: SELECT flightno FROM flights WHERE sourceairport = 'Aberdeen'\n"
 'medium gold: SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport   =  T2.AirportCode WHERE T2.City  =  "Aberdeen"\n'
 '\n'
 "medium pred: SELECT flightno FROM flights WHERE destairport = 'Aberdeen'\n"
 'medium gold: SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =  T2.AirportCode WHERE T2.City  =  "Aberdeen"\n'
 '\n'
 "medium pred: SELECT flightno FROM flights WHERE destairport = 'Aberdeen'\n"
 'medium gold: SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =  T2.AirportCode WHERE T2.City  =  "Aberdeen"\n'
 '\n'
 "hard pred: SELECT COUNT(*) FROM flights WHERE destairport IN (SELECT airportcode FROM airports WHERE city = 'Aberdeen' OR city = 'Abilene')\n"
 'hard gold: SELECT count(*) FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  "Aberdeen" OR T2.city  =  '
 '"Abilene"\n'
 '\n'
 'eval_err_num:74\n'
 "hard pred: SELECT COUNT(*) FROM flights WHERE destairport IN ('Aberdeen', 'Abilene')\n"
 'hard gold: SELECT count(*) FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  "Aberdeen" OR T2.city  =  '
 '"Abilene"\n'
 '\n'
 'hard pred: SELECT airportname  FROM airports  WHERE airportcode NOT IN (SELECT sourceairport FROM flights)  AND airportcode NOT IN (SELECT destairport FROM '
 'flights)\n'
 'hard gold: SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights)\n'
 '\n'
 'eval_err_num:75\n'
 'medium pred: SELECT city, COUNT(*) AS number_of_employees FROM employee GROUP BY city;\n'
 'medium gold: SELECT count(*) ,  city FROM employee GROUP BY city\n'
 '\n'
 'eval_err_num:76\n'
 'medium pred: SELECT city, COUNT(*) AS num_employees FROM employee GROUP BY city;\n'
 'medium gold: SELECT count(*) ,  city FROM employee GROUP BY city\n'
 '\n'
 'eval_err_num:77\n'
 'medium pred: SELECT location, COUNT(*) AS number_of_shops FROM shop GROUP BY location;\n'
 'medium gold: SELECT count(*) ,  LOCATION FROM shop GROUP BY LOCATION\n'
 '\n'
 'eval_err_num:78\n'
 'medium pred: SELECT location, COUNT(*) AS num_shops FROM shop GROUP BY location;\n'
 'medium gold: SELECT count(*) ,  LOCATION FROM shop GROUP BY LOCATION\n'
 '\n'
 'medium pred: SELECT manager_name, district FROM shop WHERE number_products = (SELECT MAX(number_products) FROM shop)\n'
 'medium gold: SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1\n'
 '\n'
 'medium pred: SELECT manager_name, district FROM shop WHERE number_products = (SELECT MAX(number_products) FROM shop)\n'
 'medium gold: SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1\n'
 '\n'
 'extra pred: SELECT name FROM employee WHERE employee_id = (     SELECT employee_id     FROM evaluation     GROUP BY employee_id     ORDER BY COUNT(*) '
 'DESC     LIMIT 1 )\n'
 'extra gold: SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC '
 'LIMIT 1\n'
 '\n'
 'eval_err_num:79\n'
 'extra pred: SELECT e.name FROM employee e JOIN evaluation ev ON e.employee_id = ev.employee_id GROUP BY e.name ORDER BY COUNT(ev.year_awarded) DESC LIMIT '
 '1;\n'
 'extra gold: SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC '
 'LIMIT 1\n'
 '\n'
 'eval_err_num:80\n'
 'hard pred: SELECT e.name FROM employee e JOIN evaluation ev ON e.employee_id = ev.employee_id WHERE ev.bonus = (SELECT MAX(bonus) FROM evaluation)\n'
 'hard gold: SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1\n'
 '\n'
 'hard pred: SELECT name FROM employee WHERE employee_id = (     SELECT employee_id     FROM evaluation     ORDER BY bonus DESC     LIMIT 1 )\n'
 'hard gold: SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1\n'
 '\n'
 'extra pred: SELECT name  FROM shop  WHERE shop_id = (     SELECT shop_id      FROM hiring      GROUP BY shop_id      ORDER BY COUNT(employee_id) DESC      '
 'LIMIT 1 )\n'
 'extra gold: SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1\n'
 '\n'
 'extra pred: SELECT name FROM shop WHERE shop_id = (   SELECT shop_id FROM hiring   GROUP BY shop_id   ORDER BY COUNT(employee_id) DESC   LIMIT 1 )\n'
 'extra gold: SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1\n'
 '\n'
 'eval_err_num:81\n'
 'hard pred: SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM employee)\n'
 'hard gold: SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring)\n'
 '\n'
 'eval_err_num:82\n'
 'medium pred: SELECT shop.name, COUNT(hiring.employee_id) AS num_employees_hired FROM shop JOIN hiring ON shop.shop_id = hiring.shop_id GROUP BY shop.name\n'
 'medium gold: SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name\n'
 '\n'
 'eval_err_num:83\n'
 'medium pred: SELECT shop.name, COUNT(employee.employee_id) AS num_employees FROM shop LEFT JOIN hiring ON shop.shop_id = hiring.shop_id LEFT JOIN employee '
 'ON hiring.employee_id = employee.employee_id GROUP BY shop.name;\n'
 'medium gold: SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name\n'
 '\n'
 'hard pred: SELECT district FROM shop WHERE number_products < 3000 AND district IN (     SELECT district     FROM shop     WHERE number_products > 10000 )\n'
 'hard gold: SELECT district FROM shop WHERE Number_products  <  3000 INTERSECT SELECT district FROM shop WHERE Number_products  >  10000\n'
 '\n'
 'hard pred: SELECT DISTINCT district FROM shop WHERE number_products < 3000 AND district IN (   SELECT district   FROM shop   WHERE number_products > 10000 '
 ')\n'
 'hard gold: SELECT district FROM shop WHERE Number_products  <  3000 INTERSECT SELECT district FROM shop WHERE Number_products  >  10000\n'
 '\n'
 'medium pred: SELECT documents.document_id, documents.template_id, documents.document_description FROM documents JOIN templates ON documents.template_id = '
 "templates.template_id WHERE documents.document_name = 'Robbin CV'\n"
 'medium gold: SELECT document_id ,  template_id ,  Document_Description FROM Documents WHERE document_name  =  "Robbin CV"\n'
 '\n'
 "medium pred: SELECT COUNT(*) FROM documents WHERE template_id IN (SELECT template_id FROM templates WHERE template_type_code = 'PPT')\n"
 "medium gold: SELECT count(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Template_Type_Code  =  'PPT'\n"
 '\n'
 'medium pred: SELECT COUNT(*) FROM documents JOIN templates ON documents.template_id = templates.template_id JOIN ref_template_types ON '
 "templates.template_type_code = ref_template_types.template_type_code WHERE ref_template_types.template_type_description = 'PPT'\n"
 "medium gold: SELECT count(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Template_Type_Code  =  'PPT'\n"
 '\n'
 'eval_err_num:84\n'
 'medium pred: SELECT templates.template_id, COUNT(documents.document_id) AS num_documents FROM templates LEFT JOIN documents ON templates.template_id = '
 'documents.template_id GROUP BY templates.template_id;\n'
 'medium gold: SELECT template_id ,  count(*) FROM Documents GROUP BY template_id\n'
 '\n'
 'eval_err_num:85\n'
 'medium pred: SELECT template_id, COUNT(*) AS usage_count FROM documents GROUP BY template_id;\n'
 'medium gold: SELECT template_id ,  count(*) FROM Documents GROUP BY template_id\n'
 '\n'
 'extra pred: SELECT template_id, template_type_code FROM templates WHERE template_id = (     SELECT template_id     FROM documents     GROUP BY '
 'template_id     ORDER BY COUNT(*) DESC     LIMIT 1 )\n'
 'extra gold: SELECT T1.template_id ,  T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id GROUP BY '
 'T1.template_id ORDER BY count(*) DESC LIMIT 1\n'
 '\n'
 'eval_err_num:86\n'
 'extra pred: SELECT template_id, template_type_code FROM templates WHERE template_id IN (     SELECT template_id     FROM documents     GROUP BY '
 'template_id     HAVING COUNT(*) = (         SELECT MAX(doc_count)         FROM (             SELECT template_id, COUNT(*) as doc_count             FROM '
 'documents             GROUP BY template_id         ) AS counts     ) )\n'
 'extra gold: SELECT T1.template_id ,  T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id GROUP BY '
 'T1.template_id ORDER BY count(*) DESC LIMIT 1\n'
 '\n'
 'easy pred: SELECT template_id FROM documents GROUP BY template_id HAVING COUNT(DISTINCT document_id) > 1\n'
 'easy gold: SELECT template_id FROM Documents GROUP BY template_id HAVING count(*)  >  1\n'
 '\n'
 'eval_err_num:87\n'
 'easy pred: SELECT template_id FROM templates GROUP BY template_id HAVING COUNT(DISTINCT document_id) > 1\n'
 'easy gold: SELECT template_id FROM Documents GROUP BY template_id HAVING count(*)  >  1\n'
 '\n'
 'hard pred: SELECT template_id FROM templates WHERE template_id NOT IN (SELECT template_id FROM documents)\n'
 'hard gold: SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents\n'
 '\n'
 'hard pred: SELECT template_id FROM templates WHERE template_id NOT IN (SELECT template_id FROM documents)\n'
 'hard gold: SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents\n'
 '\n'
 'easy pred: SELECT COUNT(template_id) FROM templates\n'
 'easy gold: SELECT count(*) FROM Templates\n'
 '\n'
 'easy pred: SELECT template_type_code FROM ref_template_types;\n'
 'easy gold: SELECT DISTINCT template_type_code FROM Templates\n'
 '\n'
 'eval_err_num:88\n'
 "medium pred: SELECT template_id FROM templates WHERE template_type_code IN ('PP', 'PPT')\n"
 'medium gold: SELECT template_id FROM Templates WHERE template_type_code  =  "PP" OR template_type_code  =  "PPT"\n'
 '\n'
 'eval_err_num:89\n'
 "medium pred: SELECT template_id FROM templates WHERE template_type_code IN ('PP', 'PPT')\n"
 'medium gold: SELECT template_id FROM Templates WHERE template_type_code  =  "PP" OR template_type_code  =  "PPT"\n'
 '\n'
 'eval_err_num:90\n'
 'medium pred: SELECT ref_template_types.template_type_code, COUNT(templates.template_id) AS number_of_templates FROM ref_template_types LEFT JOIN templates '
 'ON ref_template_types.template_type_code = templates.template_type_code GROUP BY ref_template_types.template_type_code;\n'
 'medium gold: SELECT template_type_code ,  count(*) FROM Templates GROUP BY template_type_code\n'
 '\n'
 'eval_err_num:91\n'
 'medium pred: SELECT template_type_code, COUNT(*) AS template_count FROM ref_template_types JOIN templates ON ref_template_types.template_type_code = '
 'templates.template_type_code GROUP BY template_type_code;\n'
 'medium gold: SELECT template_type_code ,  count(*) FROM Templates GROUP BY template_type_code\n'
 '\n'
 'hard pred: SELECT template_type_code FROM ref_template_types WHERE template_type_code = (     SELECT template_type_code     FROM templates     GROUP BY '
 'template_type_code     ORDER BY COUNT(*) DESC     LIMIT 1 )\n'
 'hard gold: SELECT template_type_code FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1\n'
 '\n'
 'easy pred: SELECT template_type_code FROM ref_template_types WHERE template_type_code IN (     SELECT template_type_code     FROM templates     GROUP BY '
 'template_type_code     HAVING COUNT(*) < 3 )\n'
 'easy gold: SELECT template_type_code FROM Templates GROUP BY template_type_code HAVING count(*)  <  3\n'
 '\n'
 'easy pred: SELECT template_type_code FROM ref_template_types WHERE template_type_code IN (     SELECT template_type_code     FROM templates     GROUP BY '
 'template_type_code     HAVING COUNT(*) < 3 )\n'
 'easy gold: SELECT template_type_code FROM Templates GROUP BY template_type_code HAVING count(*)  <  3\n'
 '\n'
 'medium pred: SELECT MIN(version_number), template_type_code FROM templates GROUP BY template_type_code ORDER BY MIN(version_number) LIMIT 1;\n'
 'medium gold: SELECT min(Version_Number) ,  template_type_code FROM Templates\n'
 '\n'
 'medium pred: SELECT MIN(version_number), template_type_code FROM templates GROUP BY template_type_code;\n'
 'medium gold: SELECT min(Version_Number) ,  template_type_code FROM Templates\n'
 '\n'
 'eval_err_num:92\n'
 "medium pred: SELECT t.template_type_code FROM templates t JOIN documents d ON t.template_id = d.template_id WHERE d.document_name = 'Data base'\n"
 'medium gold: SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T2.document_name  =  "Data '
 'base"\n'
 '\n'
 'eval_err_num:93\n'
 "medium pred: SELECT t.template_type_code FROM templates t JOIN documents d ON t.template_id = d.template_id WHERE d.document_name = 'Data base'\n"
 'medium gold: SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T2.document_name  =  "Data '
 'base"\n'
 '\n'
 'eval_err_num:94\n'
 'medium pred: SELECT ref_template_types.template_type_code, COUNT(documents.document_id) FROM ref_template_types LEFT JOIN templates ON '
 'ref_template_types.template_type_code = templates.template_type_code LEFT JOIN documents ON templates.template_id = documents.template_id GROUP BY '
 'ref_template_types.template_type_code;\n'
 'medium gold: SELECT T1.template_type_code ,  count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY '
 'T1.template_type_code\n'
 '\n'
 'eval_err_num:95\n'
 'medium pred: SELECT ref_template_types.template_type_code, COUNT(documents.document_id) FROM ref_template_types LEFT JOIN templates ON '
 'ref_template_types.template_type_code = templates.template_type_code LEFT JOIN documents ON templates.template_id = documents.template_id GROUP BY '
 'ref_template_types.template_type_code;\n'
 'medium gold: SELECT T1.template_type_code ,  count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY '
 'T1.template_type_code\n'
 '\n'
 'extra pred: SELECT template_type_code FROM templates GROUP BY template_type_code ORDER BY COUNT(*) DESC LIMIT 1;\n'
 'extra gold: SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code ORDER '
 'BY count(*) DESC LIMIT 1\n'
 '\n'
 'extra pred: SELECT template_type_code FROM ref_template_types WHERE template_type_code = (     SELECT template_type_code     FROM templates     GROUP BY '
 'template_type_code     ORDER BY COUNT(*) DESC     LIMIT 1 )\n'
 'extra gold: SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code ORDER '
 'BY count(*) DESC LIMIT 1\n'
 '\n'
 'eval_err_num:96\n'
 'hard pred: SELECT template_type_code FROM ref_template_types WHERE template_type_code NOT IN (     SELECT template_type_code     FROM templates     INNER '
 'JOIN documents ON templates.template_id = documents.template_id )\n'
 'hard gold: SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  '
 'T2.template_id\n'
 '\n'
 'hard pred: SELECT template_type_code  FROM ref_template_types  WHERE template_type_code NOT IN (SELECT template_type_code FROM templates)\n'
 'hard gold: SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  '
 'T2.template_id\n'
 '\n'
 'eval_err_num:97\n'
 'medium pred: SELECT DISTINCT t.template_type_description FROM ref_template_types t JOIN templates temp ON t.template_type_code = temp.template_type_code '
 'JOIN documents d ON temp.template_id = d.template_id\n'
 'medium gold: SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = '
 'T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID\n'
 '\n'
 'medium pred: SELECT template_id  FROM templates  WHERE template_type_code = (SELECT template_type_code                              FROM '
 "ref_template_types                              WHERE template_type_description = 'Presentation')\n"
 'medium gold: SELECT T2.template_id FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code WHERE '
 'T1.template_type_description  =  "Presentation"\n'
 '\n'
 'medium pred: SELECT template_id FROM templates WHERE template_type_code = (SELECT template_type_code FROM ref_template_types WHERE template_type_description '
 "= 'Presentation')\n"
 'medium gold: SELECT T2.template_id FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code WHERE '
 'T1.template_type_description  =  "Presentation"\n'
 '\n'
 'easy pred: SELECT COUNT(paragraph_id) FROM paragraphs\n'
 'easy gold: SELECT count(*) FROM Paragraphs\n'
 '\n'
 'medium pred: SELECT COUNT(paragraph_id)  FROM paragraphs  JOIN documents ON paragraphs.document_id = documents.document_id  WHERE documents.document_name = '
 "'Summer Show'\n"
 "medium gold: SELECT count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_ID  =  T2.document_ID WHERE T2.document_name  =  'Summer Show'\n"
 '\n'
 'medium pred: SELECT COUNT(paragraph_id)  FROM paragraphs  WHERE document_id = (SELECT document_id                       FROM documents                       '
 "WHERE document_name = 'Summer Show')\n"
 "medium gold: SELECT count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_ID  =  T2.document_ID WHERE T2.document_name  =  'Summer Show'\n"
 '\n'
 "easy pred: SELECT * FROM paragraphs WHERE paragraph_text = 'Korea';\n"
 "easy gold: SELECT Other_Details FROM Paragraphs WHERE paragraph_text  =  'Korea'\n"
 '\n'
 "easy pred: SELECT paragraph_text, other_details FROM paragraphs WHERE paragraph_text LIKE '%Korea%'\n"
 "easy gold: SELECT Other_Details FROM Paragraphs WHERE paragraph_text  =  'Korea'\n"
 '\n'
 'medium pred: SELECT paragraph_id, paragraph_text  FROM paragraphs  WHERE document_id = (     SELECT document_id      FROM documents      WHERE document_name '
 "= 'Welcome to NY' )\n"
 'medium gold: SELECT T1.paragraph_id ,   T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE '
 "T2.Document_Name  =  'Welcome to NY'\n"
 '\n'
 'medium pred: SELECT paragraph_id, paragraph_text  FROM paragraphs  WHERE document_id = (     SELECT document_id      FROM documents      WHERE document_name '
 "= 'Welcome to NY' )\n"
 'medium gold: SELECT T1.paragraph_id ,   T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE '
 "T2.Document_Name  =  'Welcome to NY'\n"
 '\n'
 'eval_err_num:98\n'
 'medium pred: SELECT documents.document_id, COUNT(paragraphs.paragraph_id) AS num_paragraphs FROM documents JOIN paragraphs ON documents.document_id = '
 'paragraphs.document_id GROUP BY documents.document_id ORDER BY documents.document_id;\n'
 'medium gold: SELECT document_id ,  count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id\n'
 '\n'
 'eval_err_num:99\n'
 'medium pred: SELECT documents.document_id, COUNT(paragraphs.paragraph_id) AS num_paragraphs FROM documents JOIN paragraphs ON documents.document_id = '
 'paragraphs.document_id GROUP BY documents.document_id ORDER BY documents.document_id ASC;\n'
 'medium gold: SELECT document_id ,  count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id\n'
 '\n'
 'eval_err_num:100\n'
 'medium pred: SELECT documents.document_id, documents.document_name, COUNT(paragraphs.paragraph_id) AS num_paragraphs FROM documents JOIN paragraphs ON '
 'documents.document_id = paragraphs.document_id GROUP BY documents.document_id, documents.document_name\n'
 'medium gold: SELECT T1.document_id ,  T2.document_name ,  count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY '
 'T1.document_id\n'
 '\n'
 'eval_err_num:101\n'
 'medium pred: SELECT documents.document_id, documents.document_name, COUNT(paragraphs.paragraph_id) AS num_paragraphs FROM documents JOIN paragraphs ON '
 'documents.document_id = paragraphs.document_id GROUP BY documents.document_id, documents.document_name\n'
 'medium gold: SELECT T1.document_id ,  T2.document_name ,  count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY '
 'T1.document_id\n'
 '\n'
 'easy pred: SELECT document_id FROM paragraphs GROUP BY document_id HAVING COUNT(paragraph_id) >= 2\n'
 'easy gold: SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*)  >=  2\n'
 '\n'
 'easy pred: SELECT document_id FROM paragraphs GROUP BY document_id HAVING COUNT(paragraph_id) >= 2\n'
 'easy gold: SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*)  >=  2\n'
 '\n'
 'eval_err_num:102\n'
 'extra pred: SELECT document_id, document_name FROM documents WHERE document_id IN (     SELECT document_id     FROM paragraphs     GROUP BY document_id     '
 'HAVING COUNT(*) = (         SELECT MAX(paragraph_count)         FROM (             SELECT document_id, COUNT(*) as paragraph_count             FROM '
 'paragraphs             GROUP BY document_id         ) AS counts     ) )\n'
 'extra gold: SELECT T1.document_id ,  T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY '
 'T1.document_id ORDER BY count(*) DESC LIMIT 1\n'
 '\n'
 'eval_err_num:103\n'
 'extra pred: SELECT d.document_id, d.document_name FROM documents d JOIN paragraphs p ON d.document_id = p.document_id GROUP BY d.document_id, '
 'd.document_name ORDER BY COUNT(p.paragraph_id) DESC LIMIT 1;\n'
 'extra gold: SELECT T1.document_id ,  T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY '
 'T1.document_id ORDER BY count(*) DESC LIMIT 1\n'
 '\n'
 'hard pred: SELECT document_id FROM paragraphs GROUP BY document_id ORDER BY COUNT(paragraph_id) LIMIT 1;\n'
 'hard gold: SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count(*) ASC LIMIT 1\n'
 '\n'
 'eval_err_num:104\n'
 'hard pred: SELECT document_id FROM documents GROUP BY document_id ORDER BY COUNT(paragraph_id) LIMIT 1;\n'
 'hard gold: SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count(*) ASC LIMIT 1\n'
 '\n'
 'easy pred: SELECT document_id FROM paragraphs GROUP BY document_id HAVING COUNT(paragraph_id) BETWEEN 1 AND 2\n'
 'easy gold: SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) BETWEEN 1 AND 2\n'
 '\n'
 'eval_err_num:105\n'
 'easy pred: SELECT document_id FROM documents GROUP BY document_id HAVING COUNT(paragraph_id) BETWEEN 1 AND 2;\n'
 'easy gold: SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) BETWEEN 1 AND 2\n'
 '\n'
 'eval_err_num:106\n'
 "hard pred: SELECT document_id FROM paragraphs WHERE paragraph_text IN ('Brazil', 'Ireland')\n"
 "hard gold: SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Brazil' INTERSECT SELECT document_id FROM Paragraphs WHERE paragraph_text  =  "
 "'Ireland'\n"
 '\n'
 'eval_err_num:107\n'
 "hard pred: SELECT DISTINCT d.document_id FROM documents d JOIN paragraphs p ON d.document_id = p.document_id WHERE p.paragraph_text = 'Brazil' AND "
 "p.paragraph_text = 'Ireland'\n"
 "hard gold: SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Brazil' INTERSECT SELECT document_id FROM Paragraphs WHERE paragraph_text  =  "
 "'Ireland'\n"
 '\n'
 'eval_err_num:108\n'
 "easy pred: SELECT name FROM teacher WHERE hometown <> 'Little Lever Urban District'\n"
 'easy gold: SELECT Name FROM teacher WHERE Hometown != "Little Lever Urban Distric"\n'
 '\n'
 'eval_err_num:109\n'
 "easy pred: SELECT name FROM teacher WHERE hometown <> 'Little Lever Urban District'\n"
 'easy gold: SELECT Name FROM teacher WHERE Hometown != "Little Lever Urban Distric"\n'
 '\n'
 'eval_err_num:110\n'
 'medium pred: SELECT name FROM teacher WHERE age IN (32, 33)\n'
 'medium gold: SELECT Name FROM teacher WHERE Age  =  32 OR Age  =  33\n'
 '\n'
 'eval_err_num:111\n'
 'medium pred: SELECT name FROM teacher WHERE age IN (32, 33)\n'
 'medium gold: SELECT Name FROM teacher WHERE Age  =  32 OR Age  =  33\n'
 '\n'
 'medium pred: SELECT hometown FROM teacher WHERE age = (SELECT MIN(age) FROM teacher)\n'
 'medium gold: SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1\n'
 '\n'
 'medium pred: SELECT hometown FROM teacher WHERE age = (SELECT MIN(age) FROM teacher)\n'
 'medium gold: SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1\n'
 '\n'
 'eval_err_num:112\n'
 'medium pred: SELECT hometown, COUNT(*) AS num_teachers FROM teacher GROUP BY hometown;\n'
 'medium gold: SELECT Hometown ,  COUNT(*) FROM teacher GROUP BY Hometown\n'
 '\n'
 'eval_err_num:113\n'
 'medium pred: SELECT hometown, COUNT(*) AS num_teachers FROM teacher GROUP BY hometown\n'
 'medium gold: SELECT Hometown ,  COUNT(*) FROM teacher GROUP BY Hometown\n'
 '\n'
 'eval_err_num:114\n'
 'hard pred: SELECT hometown, COUNT(*) AS count FROM teacher GROUP BY hometown ORDER BY count DESC LIMIT 1;\n'
 'hard gold: SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1\n'
 '\n'
 'easy pred: SELECT hometown FROM teacher GROUP BY hometown HAVING COUNT(*) > 1\n'
 'easy gold: SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*)  >=  2\n'
 '\n'
 'eval_err_num:115\n'
 'hard pred: SELECT t.name FROM teacher t JOIN course_arrange ca ON t.teacher_id = ca.teacher_id JOIN course c ON ca.course_id = c.course_id WHERE c.course = '
 "'math'\n"
 'hard gold: SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID '
 'WHERE T2.Course  =  "Math"\n'
 '\n'
 'eval_err_num:116\n'
 'medium pred: SELECT teacher.name, COUNT(course_arrange.course_id) AS num_courses FROM teacher JOIN course_arrange ON teacher.teacher_id = '
 'course_arrange.teacher_id GROUP BY teacher.name;\n'
 'medium gold: SELECT T2.Name ,  COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name\n'
 '\n'
 'eval_err_num:117\n'
 'medium pred: SELECT teacher.name, COUNT(course_arrange.course_id) AS num_courses FROM teacher JOIN course_arrange ON teacher.teacher_id = '
 'course_arrange.teacher_id GROUP BY teacher.name;\n'
 'medium gold: SELECT T2.Name ,  COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name\n'
 '\n'
 'medium pred: SELECT name FROM teacher WHERE teacher_id IN (   SELECT teacher_id FROM course_arrange   GROUP BY teacher_id   HAVING COUNT(course_id) >= 2 )\n'
 'medium gold: SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2\n'
 '\n'
 'medium pred: SELECT name FROM teacher WHERE teacher_id IN (   SELECT teacher_id FROM course_arrange   GROUP BY teacher_id   HAVING COUNT(course_id) >= 2 )\n'
 'medium gold: SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2\n'
 '\n'
 'medium pred: SELECT museum_id, name  FROM museum  WHERE num_of_staff = (SELECT MAX(num_of_staff) FROM museum)\n'
 'medium gold: SELECT museum_id ,  name FROM museum ORDER BY num_of_staff DESC LIMIT 1\n'
 '\n'
 'medium pred: SELECT visitor.id, visitor.name, visitor.age FROM visitor JOIN visit ON visitor.id = visit.visitor_id GROUP BY visitor.id, visitor.name, '
 'visitor.age HAVING COUNT(visit.museum_id) > 1;\n'
 'medium gold: SELECT t1.id ,  t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t1.id HAVING count(*)  >  1\n'
 '\n'
 'extra pred: SELECT visitor.id, visitor.name, visitor.level_of_membership FROM visitor JOIN visit ON visitor.id = visit.visitor_id GROUP BY visitor.id, '
 'visitor.name, visitor.level_of_membership ORDER BY SUM(visit.total_spent) DESC LIMIT 1;\n'
 'extra gold: SELECT t2.visitor_id ,  t1.name ,  t1.Level_of_membership FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t2.visitor_id '
 'ORDER BY sum(t2.Total_spent) DESC LIMIT 1\n'
 '\n'
 'extra pred: SELECT museum_id, name  FROM museum  WHERE museum_id = (     SELECT museum_id      FROM visit      GROUP BY museum_id      ORDER BY COUNT(*) '
 'DESC      LIMIT 1 )\n'
 'extra gold: SELECT t2.Museum_ID ,  t1.name FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID GROUP BY t2.Museum_ID ORDER BY count(*) DESC '
 'LIMIT 1\n'
 '\n'
 'hard pred: SELECT visitor.name, visitor.age FROM visitor JOIN visit ON visitor.id = visit.visitor_id WHERE visit.num_of_ticket = (SELECT MAX(num_of_ticket) '
 'FROM visit)\n'
 'hard gold: SELECT t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id ORDER BY t2.num_of_ticket DESC LIMIT 1\n'
 '\n'
 'eval_err_num:118\n'
 'extra pred: SELECT v.name FROM visitor v JOIN visit vi ON v.id = vi.visitor_id JOIN museum m ON vi.museum_id = m.museum_id WHERE m.open_year < 2009 AND '
 'm.open_year > 2011 GROUP BY v.name HAVING COUNT(DISTINCT m.open_year) = 2\n'
 'extra gold: SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE '
 't3.open_year  <  2009 INTERSECT SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  '
 't2.Museum_ID WHERE t3.open_year  >  2011\n'
 '\n'
 'extra pred: SELECT COUNT(*) FROM visitor WHERE id NOT IN (SELECT visitor_id FROM visit WHERE museum_id IN (SELECT museum_id FROM museum WHERE open_year > '
 '2010))\n'
 'extra gold: SELECT count(*) FROM visitor WHERE id NOT IN (SELECT t2.visitor_id FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID WHERE '
 't1.open_year  >  2010)\n'
 '\n'
 'eval_err_num:119\n'
 'easy pred: SELECT COUNT(*) AS total_matches FROM matches;\n'
 'easy gold: SELECT count(*) FROM matches\n'
 '\n'
 'eval_err_num:120\n'
 'medium pred: SELECT AVG(loser_age) AS average_loser_age, AVG(winner_age) AS average_winner_age FROM matches\n'
 'medium gold: SELECT avg(loser_age) ,  avg(winner_age) FROM matches\n'
 '\n'
 'eval_err_num:121\n'
 'medium pred: SELECT AVG(loser_age) AS average_loser_age, AVG(winner_age) AS average_winner_age FROM matches\n'
 'medium gold: SELECT avg(loser_age) ,  avg(winner_age) FROM matches\n'
 '\n'
 'easy pred: SELECT MAX(loser_rank) FROM matches\n'
 'easy gold: SELECT min(loser_rank) FROM matches\n'
 '\n'
 'easy pred: SELECT MAX(loser_rank) FROM matches\n'
 'easy gold: SELECT min(loser_rank) FROM matches\n'
 '\n'
 'hard pred: SELECT DISTINCT winner_name FROM matches WHERE year = 2013 AND winner_name IN (   SELECT winner_name   FROM matches   WHERE year = 2016 )\n'
 'hard gold: SELECT winner_name FROM matches WHERE YEAR  =  2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR  =  2016\n'
 '\n'
 'eval_err_num:122\n'
 'hard pred: SELECT DISTINCT p.first_name, p.last_name FROM players p INNER JOIN matches m ON p.player_id = m.winner_id WHERE m.year IN (2013, 2016) GROUP BY '
 'p.player_id HAVING COUNT(DISTINCT m.year) = 2\n'
 'hard gold: SELECT winner_name FROM matches WHERE YEAR  =  2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR  =  2016\n'
 '\n'
 'eval_err_num:123\n'
 'medium pred: SELECT COUNT(*) FROM matches WHERE year IN (2013, 2016)\n'
 'medium gold: SELECT count(*) FROM matches WHERE YEAR  =  2013 OR YEAR  =  2016\n'
 '\n'
 'eval_err_num:124\n'
 "extra pred: SELECT DISTINCT p.country_code, p.first_name FROM players p JOIN matches m ON p.player_id = m.winner_id WHERE m.tourney_name = 'WTA "
 "Championships' AND m.tourney_name = 'Australian Open'\n"
 "extra gold: SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'WTA "
 "Championships' INTERSECT SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE "
 "T2.tourney_name  =  'Australian Open'\n"
 '\n'
 "extra pred: SELECT first_name, country_code FROM players WHERE player_id IN (     SELECT winner_id     FROM matches     WHERE tourney_name = 'WTA "
 "Championships' ) AND player_id IN (     SELECT winner_id     FROM matches     WHERE tourney_name = 'Australian Open' )\n"
 "extra gold: SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'WTA "
 "Championships' INTERSECT SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE "
 "T2.tourney_name  =  'Australian Open'\n"
 '\n'
 'medium pred: SELECT first_name, country_code FROM players WHERE birth_date = (SELECT MIN(birth_date) FROM players)\n'
 'medium gold: SELECT first_name ,  country_code FROM players ORDER BY birth_date LIMIT 1\n'
 '\n'
 'medium pred: SELECT first_name, country_code FROM players WHERE birth_date = (SELECT MIN(birth_date) FROM players)\n'
 'medium gold: SELECT first_name ,  country_code FROM players ORDER BY birth_date LIMIT 1\n'
 '\n'
 'eval_err_num:125\n'
 "medium pred: SELECT CONCAT(first_name, ' ', last_name) AS full_name FROM players ORDER BY birth_date ASC\n"
 'medium gold: SELECT first_name ,  last_name FROM players ORDER BY birth_date\n'
 '\n'
 'eval_err_num:126\n'
 "medium pred: SELECT CONCAT(first_name, ' ', last_name) AS full_name FROM players WHERE hand = 'L' ORDER BY birth_date ASC;\n"
 "medium gold: SELECT first_name ,  last_name FROM players WHERE hand  =  'L' ORDER BY birth_date\n"
 '\n'
 'eval_err_num:127\n'
 'hard pred: SELECT p.first_name, p.country_code FROM players p JOIN rankings r ON p.player_id = r.player_id GROUP BY p.player_id ORDER BY COUNT(r.tours) DESC '
 'LIMIT 1;\n'
 'hard gold: SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours DESC LIMIT 1\n'
 '\n'
 'eval_err_num:128\n'
 'hard pred: SELECT p.first_name, p.country_code FROM players p JOIN rankings r ON p.player_id = r.player_id GROUP BY p.player_id ORDER BY COUNT(r.tours) DESC '
 'LIMIT 1;\n'
 'hard gold: SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours DESC LIMIT 1\n'
 '\n'
 'eval_err_num:129\n'
 'hard pred: SELECT winner_name, winner_rank_points FROM matches GROUP BY winner_name, winner_rank_points HAVING COUNT(*) = (     SELECT MAX(win_count)     '
 'FROM (         SELECT winner_name, COUNT(*) as win_count         FROM matches         GROUP BY winner_name     ) AS win_counts )\n'
 'hard gold: SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1\n'
 '\n'
 'eval_err_num:130\n'
 "hard pred: SELECT p.first_name || ' ' || p.last_name AS winner_name, r.ranking_points FROM players p JOIN rankings r ON p.player_id = r.player_id WHERE "
 'p.player_id = (     SELECT winner_id     FROM matches     GROUP BY winner_id     ORDER BY COUNT(*) DESC     LIMIT 1 )\n'
 'hard gold: SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1\n'
 '\n'
 'medium pred: SELECT loser_name, winner_name FROM matches WHERE minutes = (SELECT MAX(minutes) FROM matches)\n'
 'medium gold: SELECT winner_name ,  loser_name FROM matches ORDER BY minutes DESC LIMIT 1\n'
 '\n'
 'medium pred: SELECT winner_name, loser_name FROM matches WHERE minutes = (SELECT MAX(minutes) FROM matches)\n'
 'medium gold: SELECT winner_name ,  loser_name FROM matches ORDER BY minutes DESC LIMIT 1\n'
 '\n'
 'eval_err_num:131\n'
 'medium pred: SELECT players.first_name, AVG(rankings.ranking) AS average_ranking FROM players JOIN rankings ON players.player_id = rankings.player_id GROUP '
 'BY players.player_id, players.first_name\n'
 'medium gold: SELECT avg(ranking) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name\n'
 '\n'
 'eval_err_num:132\n'
 'medium pred: SELECT first_name, AVG(ranking) AS average_ranking FROM players JOIN rankings ON players.player_id = rankings.player_id GROUP BY first_name\n'
 'medium gold: SELECT avg(ranking) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name\n'
 '\n'
 'eval_err_num:133\n'
 'medium pred: SELECT players.first_name, SUM(rankings.ranking_points) AS total_ranking_points FROM players JOIN rankings ON players.player_id = '
 'rankings.player_id GROUP BY players.player_id, players.first_name\n'
 'medium gold: SELECT sum(ranking_points) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name\n'
 '\n'
 'eval_err_num:134\n'
 'medium pred: SELECT first_name, SUM(ranking_points) AS total_ranking_points FROM players JOIN rankings ON players.player_id = rankings.player_id GROUP BY '
 'first_name\n'
 'medium gold: SELECT sum(ranking_points) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name\n'
 '\n'
 'eval_err_num:135\n'
 'medium pred: SELECT country_code, COUNT(*) AS player_count FROM players GROUP BY country_code;\n'
 'medium gold: SELECT count(*) ,  country_code FROM players GROUP BY country_code\n'
 '\n'
 'eval_err_num:136\n'
 'medium pred: SELECT country_code, COUNT(*) AS player_count FROM players GROUP BY country_code;\n'
 'medium gold: SELECT count(*) ,  country_code FROM players GROUP BY country_code\n'
 '\n'
 'eval_err_num:137\n'
 'medium pred: SELECT ranking_date, COUNT(DISTINCT tours) AS total_tours FROM rankings GROUP BY ranking_date\n'
 'medium gold: SELECT sum(tours) ,  ranking_date FROM rankings GROUP BY ranking_date\n'
 '\n'
 'eval_err_num:138\n'
 'medium pred: SELECT ranking_date, COUNT(DISTINCT tours) AS total_tours FROM rankings GROUP BY ranking_date\n'
 'medium gold: SELECT sum(tours) ,  ranking_date FROM rankings GROUP BY ranking_date\n'
 '\n'
 'eval_err_num:139\n'
 'medium pred: SELECT year, COUNT(*) AS num_matches FROM matches GROUP BY year;\n'
 'medium gold: SELECT count(*) ,  YEAR FROM matches GROUP BY YEAR\n'
 '\n'
 'eval_err_num:140\n'
 'medium pred: SELECT year, COUNT(*) AS num_matches FROM matches GROUP BY year;\n'
 'medium gold: SELECT count(*) ,  YEAR FROM matches GROUP BY YEAR\n'
 '\n'
 "medium pred: SELECT COUNT(DISTINCT winner_id)  FROM matches  WHERE tourney_name = 'WTA Championships'  AND winner_hand = 'L'\n"
 "medium gold: SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name  =  'WTA Championships' AND winner_hand  =  'L'\n"
 '\n'
 "medium pred: SELECT COUNT(DISTINCT winner_id) FROM matches WHERE winner_hand = 'L' AND tourney_name = 'WTA Championships'\n"
 "medium gold: SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name  =  'WTA Championships' AND winner_hand  =  'L'\n"
 '\n'
 'eval_err_num:141\n'
 'hard pred: SELECT p.first_name, p.country_code, p.birth_date FROM players p JOIN matches m ON p.player_id = m.winner_id WHERE m.winner_rank_points = (SELECT '
 'MAX(winner_rank_points) FROM matches)\n'
 'hard gold: SELECT T1.first_name ,  T1.country_code ,  T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id ORDER BY '
 'T2.winner_rank_points DESC LIMIT 1\n'
 '\n'
 'eval_err_num:142\n'
 'hard pred: SELECT p.first_name, p.country_code, p.birth_date FROM players p JOIN matches m ON p.player_id = m.winner_id ORDER BY m.winner_rank_points DESC '
 'LIMIT 1;\n'
 'hard gold: SELECT T1.first_name ,  T1.country_code ,  T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id ORDER BY '
 'T2.winner_rank_points DESC LIMIT 1\n'
 '\n'
 'eval_err_num:143\n'
 'medium pred: SELECT hand, COUNT(*) AS num_players FROM players GROUP BY hand;\n'
 'medium gold: SELECT count(*) ,  hand FROM players GROUP BY hand\n'
 '\n'
 'eval_err_num:144\n'
 'medium pred: SELECT hand, COUNT(*) AS count_players FROM players GROUP BY hand;\n'
 'medium gold: SELECT count(*) ,  hand FROM players GROUP BY hand\n'
 '\n'
 'medium pred: SELECT name, date, result FROM battle;\n'
 'medium gold: SELECT name ,  date FROM battle\n'
 '\n'
 'eval_err_num:145\n'
 'medium pred: SELECT MAX(killed) AS maximum_death_toll, MIN(killed) AS minimum_death_toll FROM death\n'
 'medium gold: SELECT max(killed) ,  min(killed) FROM death\n'
 '\n'
 "medium pred: SELECT note, killed, injured FROM death WHERE caused_by_ship_id IN (     SELECT id     FROM ship     WHERE tonnage = 't' )\n"
 "medium gold: SELECT T1.killed ,  T1.injured FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id WHERE T2.tonnage  =  't'\n"
 '\n'
 'eval_err_num:146\n'
 "medium pred: SELECT name, result FROM battle WHERE bulgarian_commander <> 'Boril'\n"
 "medium gold: SELECT name ,  RESULT FROM battle WHERE bulgarian_commander != 'Boril'\n"
 '\n'
 'eval_err_num:147\n'
 "medium pred: SELECT DISTINCT b.id, b.name FROM battle b JOIN ship s ON b.id = s.lost_in_battle WHERE s.ship_type = 'Brig'\n"
 "medium gold: SELECT DISTINCT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.ship_type  =  'Brig'\n"
 '\n'
 'hard pred: SELECT id, name FROM battle WHERE id IN (     SELECT caused_by_ship_id     FROM death     GROUP BY caused_by_ship_id     HAVING SUM(killed) > 10 '
 ')\n'
 'hard gold: SELECT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle JOIN death AS T3 ON T2.id  =  T3.caused_by_ship_id GROUP '
 'BY T1.id HAVING sum(T3.killed)  >  10\n'
 '\n'
 'extra pred: SELECT caused_by_ship_id, name FROM ship JOIN death ON ship.id = death.caused_by_ship_id GROUP BY caused_by_ship_id, name ORDER BY SUM(injured) '
 'DESC LIMIT 1;\n'
 'extra gold: SELECT T2.id ,  T2.name FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id GROUP BY T2.id ORDER BY count(*) DESC LIMIT 1\n'
 '\n'
 'eval_err_num:148\n'
 "extra pred: SELECT COUNT(DISTINCT battle.id) FROM battle LEFT JOIN ship ON battle.id = ship.lost_in_battle WHERE ship.tonnage <> '225' OR ship.tonnage IS "
 'NULL\n'
 "extra gold: SELECT count(*) FROM battle WHERE id NOT IN ( SELECT lost_in_battle FROM ship WHERE tonnage  =  '225' );\n"
 '\n'
 'eval_err_num:149\n'
 "extra pred: SELECT b.name, b.date FROM battle b JOIN ship s1 ON b.id = s1.lost_in_battle JOIN ship s2 ON b.id = s2.lost_in_battle WHERE s1.name = 'Lettice' "
 "AND s2.name = 'HMS Atalanta'\n"
 "extra gold: SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  'Lettice' INTERSECT SELECT T1.name "
 ",  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  'HMS Atalanta'\n"
 '\n'
 'eval_err_num:150\n'
 "extra pred: SELECT name, result, bulgarian_commander FROM battle WHERE id NOT IN (   SELECT DISTINCT battle_id   FROM ship   WHERE location = 'English "
 "Channel'   AND lost_in_battle = 1 )\n"
 'extra gold: SELECT name ,  RESULT ,  bulgarian_commander FROM battle EXCEPT SELECT T1.name ,  T1.result ,  T1.bulgarian_commander FROM battle AS T1 JOIN '
 "ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.location  =  'English Channel'\n"
 '\n'
 "easy pred: SELECT course_description  FROM courses  WHERE course_name LIKE '%math%';\n"
 "easy gold: SELECT course_description FROM Courses WHERE course_name  =  'math'\n"
 '\n'
 'eval_err_num:151\n'
 'extra pred: SELECT department_id, department_name FROM departments WHERE department_id IN (     SELECT department_id     FROM degree_programs     GROUP BY '
 'department_id     HAVING COUNT(*) = (         SELECT MAX(degree_count)         FROM (             SELECT department_id, COUNT(*) as degree_count             '
 'FROM degree_programs             GROUP BY department_id         ) AS counts     ) )\n'
 'extra gold: SELECT T2.department_name ,  T1.department_id FROM Degree_Programs AS T1 JOIN Departments AS T2 ON T1.department_id  =  T2.department_id GROUP '
 'BY T1.department_id ORDER BY count(*) DESC LIMIT 1\n'
 '\n'
 'extra pred: SELECT department_id, department_name FROM departments WHERE department_id = (     SELECT department_id     FROM degree_programs     GROUP BY '
 'department_id     ORDER BY COUNT(*) DESC     LIMIT 1 )\n'
 'extra gold: SELECT T2.department_name ,  T1.department_id FROM Degree_Programs AS T1 JOIN Departments AS T2 ON T1.department_id  =  T2.department_id GROUP '
 'BY T1.department_id ORDER BY count(*) DESC LIMIT 1\n'
 '\n'
 'easy pred: SELECT COUNT(DISTINCT degree_program_id) FROM degree_programs\n'
 'easy gold: SELECT count(DISTINCT degree_summary_name) FROM Degree_Programs\n'
 '\n'
 'medium pred: SELECT COUNT(degree_program_id) FROM degree_programs WHERE department_id = (SELECT department_id FROM departments WHERE department_name = '
 "'engineering')\n"
 'medium gold: SELECT count(*) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id  =  T2.department_id WHERE T1.department_name  =  '
 "'engineer'\n"
 '\n'
 "medium pred: SELECT COUNT(*) FROM degree_programs WHERE department_id = (SELECT department_id FROM departments WHERE department_name = 'engineering')\n"
 'medium gold: SELECT count(*) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id  =  T2.department_id WHERE T1.department_name  =  '
 "'engineer'\n"
 '\n'
 'medium pred: SELECT course_id, course_name FROM courses WHERE course_id IN (     SELECT course_id     FROM sections     GROUP BY course_id     HAVING '
 'COUNT(section_id) <= 2 )\n'
 'medium gold: SELECT T1.course_name ,  T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id HAVING '
 'count(*)  <=  2\n'
 '\n'
 'medium pred: SELECT course_id, course_name FROM courses WHERE course_id IN (   SELECT course_id   FROM sections   GROUP BY course_id   HAVING '
 'COUNT(section_id) < 2 )\n'
 'medium gold: SELECT T1.course_name ,  T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id HAVING '
 'count(*)  <=  2\n'
 '\n'
 'extra pred: SELECT semester_name, semester_id FROM semesters WHERE semester_id = (     SELECT semester_id     FROM student_enrolment     GROUP BY '
 'semester_id     ORDER BY COUNT(student_id) DESC     LIMIT 1 )\n'
 'extra gold: SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id GROUP BY '
 'T1.semester_id ORDER BY count(*) DESC LIMIT 1\n'
 '\n'
 'eval_err_num:152\n'
 'extra pred: SELECT semester_id, semester_name FROM semesters WHERE semester_id IN (     SELECT semester_id     FROM student_enrolment     GROUP BY '
 'semester_id     HAVING COUNT(student_id) = (         SELECT MAX(student_count)         FROM (             SELECT semester_id, COUNT(student_id) AS '
 'student_count             FROM student_enrolment             GROUP BY semester_id         ) AS counts     ) )\n'
 'extra gold: SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id GROUP BY '
 'T1.semester_id ORDER BY count(*) DESC LIMIT 1\n'
 '\n'
 'eval_err_num:153\n'
 'medium pred: SELECT s.first_name, s.middle_name, s.last_name, s.student_id FROM students s INNER JOIN student_enrolment se ON s.student_id = se.student_id '
 'INNER JOIN degree_programs dp ON se.degree_program_id = dp.degree_program_id INNER JOIN semesters sem ON se.semester_id = sem.semester_id GROUP BY '
 's.first_name, s.middle_name, s.last_name, s.student_id HAVING COUNT(DISTINCT dp.degree_program_id) = 2 AND COUNT(DISTINCT sem.semester_id) = 1\n'
 'medium gold: SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  '
 'T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2\n'
 '\n'
 'eval_err_num:154\n'
 'medium pred: SELECT s.student_id, s.first_name, s.middle_name, s.last_name FROM students s INNER JOIN student_enrolment se ON s.student_id = se.student_id '
 'INNER JOIN degree_programs dp ON se.degree_program_id = dp.degree_program_id GROUP BY s.student_id, s.first_name, s.middle_name, s.last_name HAVING '
 'COUNT(DISTINCT se.degree_program_id) = 2 AND COUNT(DISTINCT se.semester_id) = 1\n'
 'medium gold: SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  '
 'T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2\n'
 '\n'
 'hard pred: SELECT first_name, middle_name, last_name FROM students WHERE student_id IN (   SELECT student_id   FROM student_enrolment   WHERE '
 "degree_program_id IN (     SELECT degree_program_id     FROM degree_programs     WHERE degree_summary_name = 'Bachelors'   ) )\n"
 'hard gold: SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  '
 "T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name  =  'Bachelor'\n"
 '\n'
 'extra pred: SELECT degree_summary_name FROM degree_programs WHERE degree_program_id = (     SELECT degree_program_id     FROM student_enrolment     GROUP BY '
 'degree_program_id     ORDER BY COUNT(student_id) DESC     LIMIT 1 )\n'
 'extra gold: SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY '
 'T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1\n'
 '\n'
 'extra pred: SELECT degree_summary_name FROM degree_programs JOIN student_enrolment ON degree_programs.degree_program_id = '
 'student_enrolment.degree_program_id GROUP BY degree_summary_name ORDER BY COUNT(student_enrolment.student_id) DESC LIMIT 1;\n'
 'extra gold: SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY '
 'T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1\n'
 '\n'
 'extra pred: SELECT degree_programs.degree_program_id, degree_programs.degree_summary_name FROM degree_programs JOIN student_enrolment ON '
 'degree_programs.degree_program_id = student_enrolment.degree_program_id GROUP BY degree_programs.degree_program_id, degree_programs.degree_summary_name '
 'ORDER BY COUNT(student_enrolment.student_id) DESC LIMIT 1;\n'
 'extra gold: SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  '
 'T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1\n'
 '\n'
 'extra pred: SELECT degree_program_id, degree_summary_description FROM degree_programs WHERE degree_program_id = (     SELECT degree_program_id     FROM '
 'student_enrolment     GROUP BY degree_program_id     ORDER BY COUNT(student_id) DESC     LIMIT 1 )\n'
 'extra gold: SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  '
 'T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1\n'
 '\n'
 'eval_err_num:155\n'
 'extra pred: SELECT s.student_id, s.first_name, s.middle_name, s.last_name, COUNT(se.student_enrolment_id) AS num_enrollments FROM students s JOIN '
 'student_enrolment se ON s.student_id = se.student_id GROUP BY s.student_id, s.first_name, s.middle_name, s.last_name ORDER BY num_enrollments DESC LIMIT 1;\n'
 'extra gold: SELECT T1.student_id ,  T1.first_name ,  T1.middle_name ,  T1.last_name ,  count(*) ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment '
 'AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1\n'
 '\n'
 'eval_err_num:156\n'
 'extra pred: SELECT s.student_id, s.first_name, s.middle_name, s.last_name, COUNT(se.student_enrolment_id) AS num_enrollments FROM students s JOIN '
 'student_enrolment se ON s.student_id = se.student_id GROUP BY s.student_id, s.first_name, s.middle_name, s.last_name ORDER BY num_enrollments DESC LIMIT 1;\n'
 'extra gold: SELECT T1.student_id ,  T1.first_name ,  T1.middle_name ,  T1.last_name ,  count(*) ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment '
 'AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1\n'
 '\n'
 'eval_err_num:157\n'
 'easy pred: SELECT DISTINCT course_name FROM courses INNER JOIN student_enrolment_courses ON courses.course_id = student_enrolment_courses.course_id\n'
 'easy gold: SELECT DISTINCT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id\n'
 '\n'
 'easy pred: SELECT course_name FROM courses WHERE course_id IN (SELECT course_id FROM student_enrolment_courses)\n'
 'easy gold: SELECT DISTINCT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id\n'
 '\n'
 'eval_err_num:158\n'
 'extra pred: SELECT c.course_name FROM courses c JOIN student_enrollment_courses sec ON c.course_id = sec.course_id GROUP BY c.course_name ORDER BY '
 'COUNT(sec.student_enrollment_id) DESC LIMIT 1;\n'
 'extra gold: SELECT  T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY '
 'count(*) DESC LIMIT 1\n'
 '\n'
 'eval_err_num:159\n'
 'extra pred: SELECT c.course_name FROM courses c JOIN student_enrolment_courses sec ON c.course_id = sec.course_id GROUP BY c.course_name ORDER BY '
 'COUNT(sec.student_enrolment_id) DESC LIMIT 1;\n'
 'extra gold: SELECT  T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY '
 'count(*) DESC LIMIT 1\n'
 '\n'
 "extra pred: SELECT last_name FROM students JOIN addresses ON students.current_address_id = addresses.address_id WHERE state_province_county = 'North "
 "Carolina' AND student_id NOT IN (     SELECT student_id     FROM student_enrolment )\n"
 'extra gold: SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  '
 "'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id  =  T4.student_id\n"
 '\n'
 "extra pred: SELECT last_name FROM students WHERE current_address_id IN (     SELECT address_id     FROM addresses     WHERE state_province_county = 'North "
 "Carolina' ) AND student_id NOT IN (     SELECT student_id     FROM student_enrolment )\n"
 'extra gold: SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  '
 "'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id  =  T4.student_id\n"
 '\n'
 'medium pred: SELECT transcript_date, transcript_id FROM transcripts WHERE transcript_id IN (     SELECT transcript_id     FROM transcript_contents     GROUP '
 'BY transcript_id     HAVING COUNT(DISTINCT student_course_id) >= 2 )\n'
 'medium gold: SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id '
 'GROUP BY T1.transcript_id HAVING count(*)  >=  2\n'
 '\n'
 'medium pred: SELECT transcript_date, transcript_id FROM transcripts WHERE transcript_id IN (     SELECT transcript_id     FROM transcript_contents     GROUP '
 'BY transcript_id     HAVING COUNT(DISTINCT student_course_id) >= 2 )\n'
 'medium gold: SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id '
 'GROUP BY T1.transcript_id HAVING count(*)  >=  2\n'
 '\n'
 'eval_err_num:160\n'
 'medium pred: SELECT first_name, middle_name, last_name FROM students WHERE student_id IN (     SELECT student_id     FROM student_enrolment     WHERE '
 'degree_program_id IN (         SELECT degree_program_id         FROM degree_programs         WHERE department_id IN (             SELECT '
 'department_id             FROM departments         )     )     ORDER BY date_left ASC     LIMIT 1 )\n'
 'medium gold: SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_left ASC LIMIT 1\n'
 '\n'
 'eval_err_num:161\n'
 'medium pred: SELECT first_name, middle_name, last_name FROM students WHERE student_id = (   SELECT student_id   FROM student_enrolment   WHERE '
 'degree_program_id IN (     SELECT degree_program_id     FROM degree_programs     WHERE department_id IN (       SELECT department_id       FROM '
 "departments       WHERE department_name = 'School'     )   )   ORDER BY date_left ASC   LIMIT 1 )\n"
 'medium gold: SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_left ASC LIMIT 1\n'
 '\n'
 'eval_err_num:162\n'
 'easy pred: SELECT first_name FROM students WHERE current_address_id <> permanent_address_id\n'
 'easy gold: SELECT first_name FROM Students WHERE current_address_id != permanent_address_id\n'
 '\n'
 'eval_err_num:163\n'
 'easy pred: SELECT first_name FROM students WHERE current_address_id <> permanent_address_id;\n'
 'easy gold: SELECT first_name FROM Students WHERE current_address_id != permanent_address_id\n'
 '\n'
 'eval_err_num:164\n'
 'extra pred: SELECT a.address_id, a.line_1, a.line_2, a.line_3 FROM addresses a JOIN students s ON a.address_id = s.current_address_id GROUP BY a.address_id, '
 'a.line_1, a.line_2, a.line_3 ORDER BY COUNT(s.student_id) DESC LIMIT 1;\n'
 'extra gold: SELECT T1.address_id ,  T1.line_1 ,  T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY '
 'T1.address_id ORDER BY count(*) DESC LIMIT 1\n'
 '\n'
 'extra pred: SELECT address_id, line_1, line_2 FROM addresses WHERE address_id IN (     SELECT current_address_id     FROM students     GROUP BY '
 'current_address_id     ORDER BY COUNT(*) DESC     LIMIT 1 )\n'
 'extra gold: SELECT T1.address_id ,  T1.line_1 ,  T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY '
 'T1.address_id ORDER BY count(*) DESC LIMIT 1\n'
 '\n'
 'medium pred: SELECT MIN(transcript_date), other_details FROM transcripts GROUP BY other_details ORDER BY transcript_date ASC LIMIT 1;\n'
 'medium gold: SELECT transcript_date ,  other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1\n'
 '\n'
 'easy pred: SELECT COUNT(transcript_id) FROM transcripts;\n'
 'easy gold: SELECT count(*) FROM Transcripts\n'
 '\n'
 'medium pred: SELECT MAX(transcript_date) FROM transcripts;\n'
 'medium gold: SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1\n'
 '\n'
 'medium pred: SELECT MAX(transcript_date) FROM transcripts;\n'
 'medium gold: SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1\n'
 '\n'
 'eval_err_num:165\n'
 'hard pred: SELECT COUNT(DISTINCT transcript_id) AS max_enrollment_count, student_course_id FROM transcript_contents GROUP BY student_course_id ORDER BY '
 'max_enrollment_count DESC LIMIT 1;\n'
 'hard gold: SELECT count(*) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1\n'
 '\n'
 'eval_err_num:166\n'
 'hard pred: SELECT course_id, COUNT(*) AS course_count FROM student_enrolment_courses GROUP BY course_id ORDER BY course_count DESC LIMIT 1;\n'
 'hard gold: SELECT count(*) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1\n'
 '\n'
 'extra pred: SELECT transcript_id, transcript_date FROM transcripts ORDER BY transcript_id LIMIT 1;\n'
 'extra gold: SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id '
 'GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1\n'
 '\n'
 'extra pred: SELECT transcript_id, transcript_date FROM transcripts WHERE transcript_id = (   SELECT transcript_id   FROM transcript_contents   GROUP BY '
 'transcript_id   ORDER BY COUNT(*) ASC   LIMIT 1 )\n'
 'extra gold: SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id '
 'GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1\n'
 '\n'
 'eval_err_num:167\n'
 'extra pred: SELECT s.semester_name FROM semesters s JOIN student_enrolment se ON s.semester_id = se.semester_id JOIN degree_programs dp ON '
 "se.degree_program_id = dp.degree_program_id WHERE dp.degree_summary_name IN ('Master', 'Bachelor') GROUP BY s.semester_name HAVING COUNT(DISTINCT "
 'dp.degree_summary_name) = 2\n'
 'extra gold: SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE '
 "degree_summary_name  =  'Master' INTERSECT SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  "
 "=  T2.degree_program_id WHERE degree_summary_name  =  'Bachelor'\n"
 '\n'
 'eval_err_num:168\n'
 'extra pred: SELECT semester_id FROM student_enrolment WHERE degree_program_id IN (     SELECT degree_program_id     FROM degree_programs     WHERE '
 "degree_summary_name IN ('Masters', 'Bachelors')     GROUP BY degree_program_id     HAVING COUNT(DISTINCT degree_summary_name) = 2 )\n"
 'extra gold: SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE '
 "degree_summary_name  =  'Master' INTERSECT SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  "
 "=  T2.degree_program_id WHERE degree_summary_name  =  'Bachelor'\n"
 '\n'
 'easy pred: SELECT DISTINCT line_1, line_2, line_3, city, zip_postcode, state_province_county, country, other_address_details FROM addresses WHERE address_id '
 'IN (SELECT current_address_id FROM students UNION SELECT permanent_address_id FROM students)\n'
 'easy gold: SELECT count(DISTINCT current_address_id) FROM Students\n'
 '\n'
 'easy pred: SELECT * FROM students ORDER BY last_name DESC, first_name DESC, middle_name DESC, student_id DESC\n'
 'easy gold: SELECT other_student_details FROM Students ORDER BY other_student_details DESC\n'
 '\n'
 'easy pred: SELECT other_student_details FROM students ORDER BY last_name DESC\n'
 'easy gold: SELECT other_student_details FROM Students ORDER BY other_student_details DESC\n'
 '\n'
 "easy pred: SELECT * FROM sections WHERE section_name = 'h'\n"
 "easy gold: SELECT section_description FROM Sections WHERE section_name  =  'h'\n"
 '\n'
 "extra pred: SELECT first_name FROM students WHERE permanent_address_id IN (SELECT address_id FROM addresses WHERE country = 'Haiti') OR cell_mobile_number = "
 "'09700166582'\n"
 "extra gold: SELECT T1.first_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.permanent_address_id  =  T2.address_id WHERE T2.country  =  'Haiti' UNION "
 "SELECT first_name FROM Students WHERE cell_mobile_number  =  '09700166582'\n"
 '\n'
 "extra pred: SELECT first_name FROM students WHERE permanent_address_id IN (SELECT address_id FROM addresses WHERE country = 'Haiti') OR cell_mobile_number = "
 "'09700166582'\n"
 "extra gold: SELECT T1.first_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.permanent_address_id  =  T2.address_id WHERE T2.country  =  'Haiti' UNION "
 "SELECT first_name FROM Students WHERE cell_mobile_number  =  '09700166582'\n"
 '\n'
 'eval_err_num:169\n'
 'hard pred: SELECT country, COUNT(*) AS num_channels FROM tv_channel GROUP BY country ORDER BY num_channels DESC LIMIT 1;\n'
 'hard gold: SELECT Country ,  count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1;\n'
 '\n'
 'eval_err_num:170\n'
 'hard pred: SELECT country, COUNT(*) AS num_channels FROM tv_channel GROUP BY country ORDER BY num_channels DESC LIMIT 1;\n'
 'hard gold: SELECT Country ,  count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1;\n'
 '\n'
 'eval_err_num:171\n'
 'medium pred: SELECT COUNT(DISTINCT series_name) AS num_series, COUNT(DISTINCT content) AS num_contents FROM tv_channel;\n'
 'medium gold: SELECT count(DISTINCT series_name) ,  count(DISTINCT content) FROM TV_Channel;\n'
 '\n'
 'eval_err_num:172\n'
 'hard pred: SELECT language, COUNT(tv_channel) AS num_of_channels FROM tv_channel GROUP BY language ORDER BY num_of_channels ASC LIMIT 1;\n'
 'hard gold: SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC LIMIT 1;\n'
 '\n'
 'eval_err_num:173\n'
 'hard pred: SELECT language, COUNT(tv_channel) AS num_channels FROM tv_channel GROUP BY language ORDER BY num_channels ASC LIMIT 1;\n'
 'hard gold: SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC LIMIT 1;\n'
 '\n'
 'eval_err_num:174\n'
 'medium pred: SELECT language, COUNT(tv_channel) AS num_channels FROM tv_channel GROUP BY language;\n'
 'medium gold: SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE\n'
 '\n'
 'eval_err_num:175\n'
 'medium pred: SELECT language, COUNT(*) AS num_channels FROM tv_channel GROUP BY language;\n'
 'medium gold: SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE\n'
 '\n'
 'eval_err_num:176\n'
 "medium pred: SELECT c.title FROM cartoon c JOIN tv_series ts ON c.id = ts.id JOIN tv_channel tc ON ts.channel = tc.id WHERE tc.series_name = 'Sky Radio'\n"
 'medium gold: SELECT T2.Title FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T1.series_name = "Sky Radio";\n'
 '\n'
 'eval_err_num:177\n'
 "medium pred: SELECT c.title FROM cartoon c JOIN tv_series ts ON c.channel = ts.channel JOIN tv_channel tc ON ts.channel = tc.id WHERE tc.series_name = 'Sky "
 "Radio'\n"
 'medium gold: SELECT T2.Title FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T1.series_name = "Sky Radio";\n'
 '\n'
 'easy pred: SELECT episode FROM tv_series ORDER BY rating DESC\n'
 'easy gold: SELECT Episode FROM TV_series ORDER BY rating\n'
 '\n'
 'easy pred: SELECT * FROM tv_series ORDER BY rating ASC;\n'
 'easy gold: SELECT Episode FROM TV_series ORDER BY rating\n'
 '\n'
 'eval_err_num:178\n'
 "easy pred: SELECT air_date FROM tv_series WHERE series_name = 'A Love of a Lifetime' AND episode = 'A Love of a Lifetime'\n"
 'easy gold: SELECT Air_Date FROM TV_series WHERE Episode = "A Love of a Lifetime";\n'
 '\n'
 "medium pred: SELECT series_name FROM tv_channel WHERE content = 'A Love of a Lifetime'\n"
 'medium gold: SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Episode = "A Love of a Lifetime";\n'
 '\n'
 "medium pred: SELECT episode FROM tv_series WHERE channel IN (SELECT id FROM tv_channel WHERE series_name = 'Sky Radio')\n"
 'medium gold: SELECT T2.Episode FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.series_name = "Sky Radio";\n'
 '\n'
 'eval_err_num:179\n'
 "medium pred: SELECT episode FROM tv_series WHERE series_name = 'Sky Radio'\n"
 'medium gold: SELECT T2.Episode FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.series_name = "Sky Radio";\n'
 '\n'
 'eval_err_num:180\n'
 'medium pred: SELECT directed_by, COUNT(*) AS num_cartoons FROM cartoon GROUP BY directed_by;\n'
 'medium gold: SELECT count(*) ,  Directed_by FROM cartoon GROUP BY Directed_by\n'
 '\n'
 'eval_err_num:181\n'
 'medium pred: SELECT directed_by, COUNT(*) AS num_cartoons FROM cartoon GROUP BY directed_by\n'
 'medium gold: SELECT count(*) ,  Directed_by FROM cartoon GROUP BY Directed_by\n'
 '\n'
 'medium pred: SELECT production_code, channel FROM cartoon WHERE original_air_date = (SELECT MAX(original_air_date) FROM cartoon)\n'
 'medium gold: SELECT production_code ,  channel FROM cartoon ORDER BY original_air_date LIMIT 1\n'
 '\n'
 'medium pred: SELECT production_code, channel FROM cartoon WHERE original_air_date = (SELECT MAX(original_air_date) FROM cartoon)\n'
 'medium gold: SELECT production_code ,  channel FROM cartoon ORDER BY original_air_date LIMIT 1\n'
 '\n'
 "medium pred: SELECT DISTINCT country FROM tv_channel WHERE id IN (     SELECT channel     FROM cartoon     WHERE written_by = 'Todd Casey' )\n"
 "medium gold: SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'\n"
 '\n'
 "medium pred: SELECT DISTINCT country FROM tv_channel WHERE id IN (     SELECT channel     FROM cartoon     WHERE written_by = 'Todd Casey' )\n"
 "medium gold: SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'\n"
 '\n'
 "hard pred: SELECT DISTINCT country FROM tv_channel WHERE id NOT IN (   SELECT channel   FROM cartoon   WHERE written_by = 'Todd Casey' )\n"
 'hard gold: SELECT country FROM TV_Channel EXCEPT SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  '
 "'Todd Casey'\n"
 '\n'
 "hard pred: SELECT DISTINCT country FROM tv_channel WHERE id NOT IN (   SELECT channel   FROM cartoon   WHERE written_by = 'Todd Casey' )\n"
 'hard gold: SELECT country FROM TV_Channel EXCEPT SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  '
 "'Todd Casey'\n"
 '\n'
 'eval_err_num:182\n'
 'extra pred: SELECT tv_channel.series_name, tv_channel.country FROM tv_channel JOIN cartoon ON tv_channel.id = cartoon.channel WHERE cartoon.directed_by IN '
 "('Ben Jones', 'Michael Chang')\n"
 "extra gold: SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Michael Chang' "
 "INTERSECT SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Ben Jones'\n"
 '\n'
 'extra pred: SELECT tv_channel.series_name, tv_channel.country FROM tv_channel JOIN cartoon ON tv_channel.id = cartoon.channel WHERE cartoon.directed_by = '
 "'Ben Jones' OR cartoon.directed_by = 'Michael Chang'\n"
 "extra gold: SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Michael Chang' "
 "INTERSECT SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Ben Jones'\n"
 '\n'
 'eval_err_num:183\n'
 "medium pred: SELECT pixel_aspect_ratio_par, country FROM tv_channel WHERE language <> 'English'\n"
 "medium gold: SELECT Pixel_aspect_ratio_PAR ,  country FROM tv_channel WHERE LANGUAGE != 'English'\n"
 '\n'
 'eval_err_num:184\n'
 "medium pred: SELECT pixel_aspect_ratio_par, country  FROM tv_channel  WHERE language <> 'English'\n"
 "medium gold: SELECT Pixel_aspect_ratio_PAR ,  country FROM tv_channel WHERE LANGUAGE != 'English'\n"
 '\n'
 'easy pred: SELECT id FROM tv_channel WHERE country IN (     SELECT country     FROM tv_channel     GROUP BY country     HAVING COUNT(*) > 2 )\n'
 'easy gold: SELECT id FROM tv_channel GROUP BY country HAVING count(*)  >  2\n'
 '\n'
 'eval_err_num:185\n'
 'easy pred: SELECT id FROM tv_channel WHERE tv_channel > 2;\n'
 'easy gold: SELECT id FROM tv_channel GROUP BY country HAVING count(*)  >  2\n'
 '\n'
 'eval_err_num:186\n'
 "hard pred: SELECT DISTINCT tv_channel.id FROM tv_channel LEFT JOIN cartoon ON tv_channel.id = cartoon.channel WHERE cartoon.directed_by <> 'Ben Jones' OR "
 'cartoon.directed_by IS NULL\n'
 "hard gold: SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones'\n"
 '\n'
 'eval_err_num:187\n'
 "hard pred: SELECT DISTINCT tv_channel.id FROM tv_channel LEFT JOIN cartoon ON tv_channel.id = cartoon.channel WHERE cartoon.directed_by <> 'Ben Jones' OR "
 'cartoon.directed_by IS NULL\n'
 "hard gold: SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones'\n"
 '\n'
 'medium pred: SELECT money_rank FROM poker_player WHERE earnings = (SELECT MAX(earnings) FROM poker_player)\n'
 'medium gold: SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1\n'
 '\n'
 'medium pred: SELECT money_rank FROM poker_player WHERE earnings = (SELECT MAX(earnings) FROM poker_player)\n'
 'medium gold: SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1\n'
 '\n'
 'easy pred: SELECT name FROM people;\n'
 'easy gold: SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID\n'
 '\n'
 'easy pred: SELECT name FROM people;\n'
 'easy gold: SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID\n'
 '\n'
 'eval_err_num:188\n'
 'medium pred: SELECT p.name FROM poker_player pp JOIN people p ON pp.people_id = p.people_id ORDER BY pp.final_table_made ASC;\n'
 'medium gold: SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Final_Table_Made\n'
 '\n'
 'eval_err_num:189\n'
 'medium pred: SELECT p.name FROM poker_player pp JOIN people p ON pp.people_id = p.people_id ORDER BY pp.final_table_made ASC\n'
 'medium gold: SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Final_Table_Made\n'
 '\n'
 'eval_err_num:190\n'
 'hard pred: SELECT p.birth_date FROM poker_player pp JOIN people p ON pp.people_id = p.people_id ORDER BY pp.earnings ASC LIMIT 1;\n'
 'hard gold: SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1\n'
 '\n'
 'eval_err_num:191\n'
 'hard pred: SELECT p.birth_date FROM poker_player pp JOIN people p ON pp.people_id = p.people_id ORDER BY pp.earnings ASC LIMIT 1;\n'
 'hard gold: SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1\n'
 '\n'
 'hard pred: SELECT money_rank  FROM poker_player  JOIN people ON poker_player.people_id = people.people_id  WHERE height = (SELECT MAX(height) FROM people)\n'
 'hard gold: SELECT T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1\n'
 '\n'
 'eval_err_num:192\n'
 'medium pred: SELECT p.name FROM poker_player pp JOIN people p ON pp.people_id = p.people_id ORDER BY pp.earnings DESC\n'
 'medium gold: SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings DESC\n'
 '\n'
 'eval_err_num:193\n'
 'medium pred: SELECT nationality, COUNT(*) AS count FROM people GROUP BY nationality;\n'
 'medium gold: SELECT Nationality ,  COUNT(*) FROM people GROUP BY Nationality\n'
 '\n'
 'eval_err_num:194\n'
 'medium pred: SELECT nationality, COUNT(*) AS count FROM people GROUP BY nationality\n'
 'medium gold: SELECT Nationality ,  COUNT(*) FROM people GROUP BY Nationality\n'
 '\n'
 'eval_err_num:195\n'
 "easy pred: SELECT name FROM people WHERE nationality <> 'Russia'\n"
 'easy gold: SELECT Name FROM people WHERE Nationality != "Russia"\n'
 '\n'
 'eval_err_num:196\n'
 "easy pred: SELECT name FROM people WHERE nationality <> 'Russia'\n"
 'easy gold: SELECT Name FROM people WHERE Nationality != "Russia"\n'
 '\n'
 'easy pred: SELECT COUNT(DISTINCT state) FROM area_code_state\n'
 'easy gold: SELECT count(*) FROM area_code_state\n'
 '\n'
 'eval_err_num:197\n'
 'medium pred: SELECT MAX(area_code) AS maximum_value, MIN(area_code) AS minimum_value FROM area_code_state;\n'
 'medium gold: SELECT max(area_code) ,  min(area_code) FROM area_code_state\n'
 '\n'
 'eval_err_num:198\n'
 "easy pred: SELECT contestant_name  FROM contestants  WHERE contestant_name <> 'Jessie Alloway'\n"
 "easy gold: SELECT contestant_name FROM contestants WHERE contestant_name != 'Jessie Alloway'\n"
 '\n'
 'medium pred: SELECT contestant_number, contestant_name  FROM contestants  WHERE contestant_number IN (     SELECT contestant_number      FROM votes      '
 'GROUP BY contestant_number      HAVING COUNT(*) >= 2 )\n'
 'medium gold: SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP '
 'BY T1.contestant_number HAVING count(*)  >=  2\n'
 '\n'
 'extra pred: SELECT contestant_number, contestant_name FROM contestants WHERE contestant_number = (   SELECT contestant_number   FROM votes   GROUP BY '
 'contestant_number   ORDER BY COUNT(*) ASC   LIMIT 1 )\n'
 'extra gold: SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP '
 'BY T1.contestant_number ORDER BY count(*) ASC LIMIT 1\n'
 '\n'
 'eval_err_num:199\n'
 "medium pred: SELECT COUNT(*) FROM votes WHERE state IN ('NY', 'CA')\n"
 "medium gold: SELECT count(*) FROM votes WHERE state  =  'NY' OR state  =  'CA'\n"
 '\n'
 'extra pred: SELECT COUNT(*) FROM contestants WHERE contestant_number NOT IN (SELECT DISTINCT contestant_number FROM votes)\n'
 'extra gold: SELECT count(*) FROM contestants WHERE contestant_number NOT IN ( SELECT contestant_number FROM votes )\n'
 '\n'
 'extra pred: SELECT area_code_state.area_code FROM area_code_state JOIN votes ON area_code_state.state = votes.state GROUP BY area_code_state.area_code ORDER '
 'BY COUNT(votes.vote_id) DESC LIMIT 1;\n'
 'extra gold: SELECT T1.area_code FROM area_code_state AS T1 JOIN votes AS T2 ON T1.state  =  T2.state GROUP BY T1.area_code ORDER BY count(*) DESC LIMIT 1\n'
 '\n'
 'extra pred: SELECT DISTINCT area_code_state.area_code FROM area_code_state JOIN votes ON area_code_state.state = votes.state JOIN contestants ON '
 "votes.contestant_number = contestants.contestant_number WHERE contestants.contestant_name = 'Tabatha Gehling' AND area_code_state.area_code IN (   SELECT "
 'area_code_state.area_code   FROM area_code_state   JOIN votes ON area_code_state.state = votes.state   JOIN contestants ON votes.contestant_number = '
 "contestants.contestant_number   WHERE contestants.contestant_name = 'Kelly Clauss' )\n"
 'extra gold: SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON '
 "T2.state  =  T3.state WHERE T1.contestant_name  =  'Tabatha Gehling' INTERSECT SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON "
 "T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Kelly Clauss'\n"
 '\n'
 "easy pred: SELECT SUM(surfacearea) FROM country WHERE continent = 'Caribbean'\n"
 'easy gold: SELECT sum(SurfaceArea) FROM country WHERE Region  =  "Caribbean"\n'
 '\n'
 "easy pred: SELECT continent FROM country WHERE code = 'AIA'\n"
 'easy gold: SELECT Continent FROM country WHERE Name  =  "Anguilla"\n'
 '\n'
 "medium pred: SELECT region FROM country WHERE code = (SELECT countrycode FROM city WHERE name = 'Kabul')\n"
 'medium gold: SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Name  =  "Kabul"\n'
 '\n'
 'eval_err_num:200\n'
 "medium pred: SELECT region FROM city WHERE name = 'Kabul'\n"
 'medium gold: SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Name  =  "Kabul"\n'
 '\n'
 "extra pred: SELECT language FROM countrylanguage WHERE countrycode = 'ABW' ORDER BY percentage DESC LIMIT 1;\n"
 'extra gold: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Aruba" ORDER BY Percentage '
 'DESC LIMIT 1\n'
 '\n'
 "extra pred: SELECT language FROM countrylanguage WHERE countrycode = 'ABW' AND percentage = (     SELECT MAX(percentage)     FROM countrylanguage     WHERE "
 "countrycode = 'ABW' )\n"
 'extra gold: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Aruba" ORDER BY Percentage '
 'DESC LIMIT 1\n'
 '\n'
 "easy pred: SELECT AVG(lifeexpectancy) FROM country WHERE continent = 'Africa' AND region = 'Central Africa'\n"
 'easy gold: SELECT avg(LifeExpectancy) FROM country WHERE Region  =  "Central Africa"\n'
 '\n'
 'eval_err_num:201\n'
 "medium pred: SELECT SUM(surfacearea) FROM country WHERE continent IN ('Asia', 'Europe')\n"
 'medium gold: SELECT sum(SurfaceArea) FROM country WHERE Continent  =  "Asia" OR Continent  =  "Europe"\n'
 '\n'
 'eval_err_num:202\n'
 "medium pred: SELECT SUM(surfacearea) FROM country WHERE continent IN ('Asia', 'Europe')\n"
 'medium gold: SELECT sum(SurfaceArea) FROM country WHERE Continent  =  "Asia" OR Continent  =  "Europe"\n'
 '\n'
 'eval_err_num:203\n'
 "medium pred: SELECT AVG(country.gnp) AS average_gnp, SUM(country.population) AS total_population FROM country WHERE country.governmentform = 'US territory'\n"
 'medium gold: SELECT avg(GNP) ,  sum(population) FROM country WHERE GovernmentForm  =  "US Territory"\n'
 '\n'
 'eval_err_num:204\n'
 "medium pred: SELECT AVG(gnp) AS mean_gnp, SUM(population) AS total_population FROM country WHERE continent = 'North America' AND governmentform = "
 "'Nonmetropolitan Territory'\n"
 'medium gold: SELECT avg(GNP) ,  sum(population) FROM country WHERE GovernmentForm  =  "US Territory"\n'
 '\n'
 "medium pred: SELECT COUNT(DISTINCT language)  FROM countrylanguage  WHERE countrycode = 'ABW'\n"
 'medium gold: SELECT COUNT(T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Aruba"\n'
 '\n'
 "medium pred: SELECT COUNT(language) FROM countrylanguage WHERE countrycode = 'ABW'\n"
 'medium gold: SELECT COUNT(T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Aruba"\n'
 '\n'
 "medium pred: SELECT COUNT(*) FROM countrylanguage WHERE countrycode = 'AFG' AND isofficial = 'T';\n"
 'medium gold: SELECT COUNT(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Afghanistan" AND IsOfficial  =  '
 '"T"\n'
 '\n'
 "medium pred: SELECT COUNT(*) FROM countrylanguage WHERE countrycode = 'AFG' AND isofficial = 'T';\n"
 'medium gold: SELECT COUNT(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Afghanistan" AND IsOfficial  =  '
 '"T"\n'
 '\n'
 'eval_err_num:205\n'
 'extra pred: SELECT country.name FROM country JOIN (     SELECT countrycode, COUNT(language) AS num_languages     FROM countrylanguage     GROUP BY '
 'countrycode     ORDER BY num_languages DESC     LIMIT 1 ) AS lang_count ON country.code = lang_count.countrycode;\n'
 'extra gold: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1\n'
 '\n'
 'extra pred: SELECT name FROM country WHERE code = (     SELECT countrycode     FROM countrylanguage     GROUP BY countrycode     ORDER BY COUNT(language) '
 'DESC     LIMIT 1 )\n'
 'extra gold: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1\n'
 '\n'
 'eval_err_num:206\n'
 'extra pred: SELECT continent FROM countrylanguage GROUP BY continent ORDER BY COUNT(DISTINCT language) DESC LIMIT 1;\n'
 'extra gold: SELECT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(*) DESC '
 'LIMIT 1\n'
 '\n'
 'eval_err_num:207\n'
 'extra pred: SELECT continent FROM country GROUP BY continent ORDER BY COUNT(DISTINCT language) DESC LIMIT 1;\n'
 'extra gold: SELECT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(*) DESC '
 'LIMIT 1\n'
 '\n'
 'eval_err_num:208\n'
 "easy pred: SELECT COUNT(*) FROM countrylanguage WHERE language IN ('English', 'Dutch') AND isofficial = 'T' GROUP BY countrycode HAVING COUNT(*) = 2;\n"
 'easy gold: SELECT COUNT(*) FROM (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" '
 'INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "Dutch")\n'
 '\n'
 'eval_err_num:209\n'
 "easy pred: SELECT COUNT(DISTINCT countrycode)  FROM countrylanguage  WHERE language IN ('English', 'Dutch')\n"
 'easy gold: SELECT COUNT(*) FROM (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" '
 'INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "Dutch")\n'
 '\n'
 'eval_err_num:210\n'
 'extra pred: SELECT DISTINCT c.name FROM country c JOIN countrylanguage cl1 ON c.code = cl1.countrycode JOIN countrylanguage cl2 ON c.code = cl2.countrycode '
 "WHERE cl1.language = 'English' AND cl2.language = 'French' AND cl1.isofficial = 'T' AND cl2.isofficial = 'T'\n"
 'extra gold: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" INTERSECT SELECT '
 'T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "French"\n'
 '\n'
 'eval_err_num:211\n'
 "extra pred: SELECT DISTINCT c.name FROM country c JOIN countrylanguage cl ON c.code = cl.countrycode WHERE cl.language IN ('English', 'French') GROUP BY "
 'c.name HAVING COUNT(DISTINCT cl.language) = 2\n'
 'extra gold: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" INTERSECT SELECT '
 'T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "French"\n'
 '\n'
 'eval_err_num:212\n'
 'extra pred: SELECT DISTINCT c.name FROM country c JOIN countrylanguage cl1 ON c.code = cl1.countrycode JOIN countrylanguage cl2 ON c.code = cl2.countrycode '
 "WHERE cl1.language = 'English' AND cl1.isofficial = 'T' AND cl2.language = 'French' AND cl2.isofficial = 'T'\n"
 'extra gold: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" AND T2.IsOfficial  =  '
 '"T" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "French" AND T2.IsOfficial  '
 '=  "T"\n'
 '\n'
 'eval_err_num:213\n'
 'extra pred: SELECT DISTINCT c.name FROM country c JOIN countrylanguage cl1 ON c.code = cl1.countrycode JOIN countrylanguage cl2 ON c.code = cl2.countrycode '
 "WHERE cl1.language = 'English' AND cl1.isofficial = 'T' AND cl2.language = 'French' AND cl2.isofficial = 'T'\n"
 'extra gold: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" AND T2.IsOfficial  =  '
 '"T" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "French" AND T2.IsOfficial  '
 '=  "T"\n'
 '\n'
 "medium pred: SELECT COUNT(DISTINCT continent) FROM country WHERE code IN (SELECT countrycode FROM countrylanguage WHERE language = 'Chinese')\n"
 'medium gold: SELECT COUNT( DISTINCT Continent) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "Chinese"\n'
 '\n'
 "medium pred: SELECT COUNT(DISTINCT continent) FROM country WHERE code IN (SELECT countrycode FROM countrylanguage WHERE language = 'Chinese' AND isofficial "
 "= 'T')\n"
 'medium gold: SELECT COUNT( DISTINCT Continent) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "Chinese"\n'
 '\n'
 'eval_err_num:214\n'
 "hard pred: SELECT DISTINCT region FROM country WHERE code IN (     SELECT countrycode     FROM countrylanguage     WHERE language IN ('English', 'Dutch') )\n"
 'hard gold: SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" OR '
 'T2.Language  =  "Dutch"\n'
 '\n'
 'eval_err_num:215\n'
 "hard pred: SELECT DISTINCT region FROM country WHERE code IN (     SELECT countrycode     FROM countrylanguage     WHERE language IN ('Dutch', 'English') )\n"
 'hard gold: SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" OR '
 'T2.Language  =  "Dutch"\n'
 '\n'
 'eval_err_num:216\n'
 'extra pred: SELECT DISTINCT country.name FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE (countrylanguage.language = '
 "'English' OR countrylanguage.language = 'Dutch') AND countrylanguage.isofficial = 'T'\n"
 'extra gold: SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" AND IsOfficial  =  "T" '
 'UNION SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "Dutch" AND IsOfficial  =  "T"\n'
 '\n'
 'eval_err_num:217\n'
 'extra pred: SELECT DISTINCT country.name  FROM country  JOIN countrylanguage ON country.code = countrylanguage.countrycode  WHERE (countrylanguage.language '
 "= 'English' OR countrylanguage.language = 'Dutch')  AND countrylanguage.isofficial = 'T'\n"
 'extra gold: SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" AND IsOfficial  =  "T" '
 'UNION SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "Dutch" AND IsOfficial  =  "T"\n'
 '\n'
 "extra pred: SELECT language FROM countrylanguage WHERE countrycode IN (     SELECT code     FROM country     WHERE continent = 'Asia' ) ORDER BY percentage "
 'DESC LIMIT 1;\n'
 'extra gold: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Continent  =  "Asia" GROUP BY '
 'T2.Language ORDER BY COUNT (*) DESC LIMIT 1\n'
 '\n'
 "extra pred: SELECT language FROM countrylanguage WHERE countrycode IN (     SELECT code     FROM country     WHERE continent = 'Asia' ) GROUP BY language "
 'ORDER BY COUNT(*) DESC LIMIT 1;\n'
 'extra gold: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Continent  =  "Asia" GROUP BY '
 'T2.Language ORDER BY COUNT (*) DESC LIMIT 1\n'
 '\n'
 'eval_err_num:218\n'
 'hard pred: SELECT DISTINCT language FROM countrylanguage WHERE language NOT IN (     SELECT language     FROM countrylanguage     INNER JOIN country ON '
 "countrylanguage.countrycode = country.code     WHERE governmentform <> 'Republic' ) GROUP BY language HAVING COUNT(DISTINCT countrycode) = 1\n"
 'hard gold: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.GovernmentForm  =  "Republic" GROUP BY '
 'T2.Language HAVING COUNT(*)  =  1\n'
 '\n'
 "hard pred: SELECT language FROM countrylanguage WHERE countrycode IN (     SELECT code     FROM country     WHERE governmentform = 'Republic' ) GROUP BY "
 'language HAVING COUNT(DISTINCT countrycode) = 1\n'
 'hard gold: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.GovernmentForm  =  "Republic" GROUP BY '
 'T2.Language HAVING COUNT(*)  =  1\n'
 '\n'
 "extra pred: SELECT city.name FROM city JOIN countrylanguage ON city.countrycode = countrylanguage.countrycode WHERE countrylanguage.language = 'English' "
 'ORDER BY city.population DESC LIMIT 1;\n'
 'extra gold: SELECT T1.Name ,  T1.Population FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode  =  T2.CountryCode WHERE T2.Language  =  "English" '
 'ORDER BY T1.Population DESC LIMIT 1\n'
 '\n'
 "extra pred: SELECT city.name  FROM city  JOIN countrylanguage ON city.countrycode = countrylanguage.countrycode  WHERE countrylanguage.language = 'English'  "
 'ORDER BY city.population DESC  LIMIT 1;\n'
 'extra gold: SELECT T1.Name ,  T1.Population FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode  =  T2.CountryCode WHERE T2.Language  =  "English" '
 'ORDER BY T1.Population DESC LIMIT 1\n'
 '\n'
 "extra pred: SELECT AVG(lifeexpectancy) FROM country WHERE code NOT IN (SELECT countrycode FROM countrylanguage WHERE language = 'English' AND isofficial = "
 "'T')\n"
 'extra gold: SELECT avg(LifeExpectancy) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  '
 'T2.CountryCode WHERE T2.Language  =  "English" AND T2.IsOfficial  =  "T")\n'
 '\n'
 "extra pred: SELECT AVG(lifeexpectancy) FROM country WHERE code NOT IN (SELECT countrycode FROM countrylanguage WHERE language = 'English' AND isofficial = "
 "'T')\n"
 'extra gold: SELECT avg(LifeExpectancy) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  '
 'T2.CountryCode WHERE T2.Language  =  "English" AND T2.IsOfficial  =  "T")\n'
 '\n'
 "extra pred: SELECT SUM(population) FROM country WHERE code NOT IN (SELECT countrycode FROM countrylanguage WHERE language = 'English')\n"
 'extra gold: SELECT sum(Population) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  '
 'T2.CountryCode WHERE T2.Language  =  "English")\n'
 '\n'
 "extra pred: SELECT SUM(population) FROM country WHERE code NOT IN (SELECT countrycode FROM countrylanguage WHERE language = 'English')\n"
 'extra gold: SELECT sum(Population) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  '
 'T2.CountryCode WHERE T2.Language  =  "English")\n'
 '\n'
 "medium pred: SELECT language  FROM countrylanguage  WHERE countrycode = (     SELECT code      FROM country      WHERE headofstate = 'Beatrix' )  AND "
 "isofficial = 'T'\n"
 'medium gold: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.HeadOfState  =  "Beatrix" AND '
 'T2.IsOfficial  =  "T"\n'
 '\n'
 'eval_err_num:219\n'
 "medium pred: SELECT cl.language FROM countrylanguage cl JOIN country c ON cl.countrycode = c.code WHERE c.headofstate = 'Beatrix' AND cl.isofficial = 'T'\n"
 'medium gold: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.HeadOfState  =  "Beatrix" AND '
 'T2.IsOfficial  =  "T"\n'
 '\n'
 "medium pred: SELECT COUNT(DISTINCT language)  FROM countrylanguage  WHERE isofficial = 'T'  AND countrycode IN (   SELECT code    FROM country    WHERE "
 'indepyear < 1930 )\n'
 'medium gold: SELECT count(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE  IndepYear  <  1930 AND '
 'T2.IsOfficial  =  "T"\n'
 '\n'
 'medium pred: SELECT COUNT(DISTINCT language)  FROM countrylanguage  WHERE countrycode IN (   SELECT code    FROM country    WHERE indepyear < 1930 )  AND '
 "isofficial = 'T'\n"
 'medium gold: SELECT count(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE  IndepYear  <  1930 AND '
 'T2.IsOfficial  =  "T"\n'
 '\n'
 'hard pred: SELECT name  FROM country  WHERE surfacearea > (SELECT MAX(surfacearea)                       FROM country                       WHERE continent '
 "= 'Europe')\n"
 'hard gold: SELECT Name FROM country WHERE SurfaceArea  >  (SELECT min(SurfaceArea) FROM country WHERE Continent  =  "Europe")\n'
 '\n'
 "hard pred: SELECT name FROM country WHERE surfacearea > (SELECT MAX(surfacearea) FROM country WHERE continent = 'Europe')\n"
 'hard gold: SELECT Name FROM country WHERE SurfaceArea  >  (SELECT min(SurfaceArea) FROM country WHERE Continent  =  "Europe")\n'
 '\n'
 "extra pred: SELECT name  FROM country  WHERE continent = 'Africa'  AND population < (SELECT MIN(population) FROM country WHERE continent = 'Asia')\n"
 'extra gold: SELECT Name FROM country WHERE Continent  =  "Africa"  AND population  <  (SELECT max(population) FROM country WHERE Continent  =  "Asia")\n'
 '\n'
 "extra pred: SELECT name  FROM country  WHERE continent = 'Asia'  AND population > (SELECT MAX(population) FROM country WHERE continent = 'Africa')\n"
 'extra gold: SELECT Name FROM country WHERE Continent  =  "Asia"  AND population  >  (SELECT min(population) FROM country WHERE Continent  =  "Africa")\n'
 '\n'
 'hard pred: SELECT DISTINCT country.code FROM country WHERE country.code NOT IN (     SELECT countrylanguage.countrycode     FROM countrylanguage     WHERE '
 "countrylanguage.language = 'English' )\n"
 'hard gold: SELECT CountryCode FROM countrylanguage EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  "English"\n'
 '\n'
 'hard pred: SELECT country.code FROM country WHERE country.code NOT IN (     SELECT countrylanguage.countrycode     FROM countrylanguage     WHERE '
 "countrylanguage.language = 'English' )\n"
 'hard gold: SELECT CountryCode FROM countrylanguage EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  "English"\n'
 '\n'
 'eval_err_num:220\n'
 "easy pred: SELECT DISTINCT countrycode FROM countrylanguage WHERE language <> 'English'\n"
 'easy gold: SELECT DISTINCT CountryCode FROM countrylanguage WHERE LANGUAGE != "English"\n'
 '\n'
 'eval_err_num:221\n'
 "easy pred: SELECT DISTINCT countrycode FROM countrylanguage WHERE language <> 'English'\n"
 'easy gold: SELECT DISTINCT CountryCode FROM countrylanguage WHERE LANGUAGE != "English"\n'
 '\n'
 'eval_err_num:222\n'
 "hard pred: SELECT code FROM country WHERE code NOT IN (     SELECT countrycode     FROM countrylanguage     WHERE language = 'English' ) AND governmentform "
 "<> 'Republic'\n"
 'hard gold: SELECT Code FROM country WHERE GovernmentForm != "Republic" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  "English"\n'
 '\n'
 'eval_err_num:223\n'
 "hard pred: SELECT code FROM country WHERE code NOT IN (     SELECT countrycode     FROM countrylanguage     WHERE language = 'English' ) AND governmentform "
 "<> 'Republic'\n"
 'hard gold: SELECT Code FROM country WHERE GovernmentForm != "Republic" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  "English"\n'
 '\n'
 'eval_err_num:224\n'
 'extra pred: SELECT city.name  FROM city  JOIN country ON city.countrycode = country.code  JOIN countrylanguage ON country.code = '
 "countrylanguage.countrycode  WHERE country.continent = 'Europe'  AND countrylanguage.language <> 'English'  AND countrylanguage.isofficial = 'F'\n"
 "extra gold: SELECT DISTINCT T2.Name FROM country AS T1 JOIN city AS T2 ON T2.CountryCode  =  T1.Code WHERE T1.Continent  =  'Europe' AND T1.Name NOT IN "
 "(SELECT T3.Name FROM country AS T3 JOIN countrylanguage AS T4 ON T3.Code  =  T4.CountryCode WHERE T4.IsOfficial  =  'T' AND T4.Language  =  'English')\n"
 '\n'
 'eval_err_num:225\n'
 'extra pred: SELECT city.name  FROM city  JOIN country ON city.countrycode = country.code  JOIN countrylanguage ON country.code = '
 "countrylanguage.countrycode  WHERE country.continent = 'Europe'  AND countrylanguage.language <> 'English'  AND countrylanguage.isofficial = 'F'\n"
 "extra gold: SELECT DISTINCT T2.Name FROM country AS T1 JOIN city AS T2 ON T2.CountryCode  =  T1.Code WHERE T1.Continent  =  'Europe' AND T1.Name NOT IN "
 "(SELECT T3.Name FROM country AS T3 JOIN countrylanguage AS T4 ON T3.Code  =  T4.CountryCode WHERE T4.IsOfficial  =  'T' AND T4.Language  =  'English')\n"
 '\n'
 'medium pred: SELECT name, indepyear, surfacearea FROM country WHERE population = (SELECT MIN(population) FROM country)\n'
 'medium gold: SELECT Name ,  SurfaceArea ,  IndepYear FROM country ORDER BY Population LIMIT 1\n'
 '\n'
 'medium pred: SELECT name, indepyear, surfacearea FROM country WHERE population = (SELECT MIN(population) FROM country)\n'
 'medium gold: SELECT Name ,  SurfaceArea ,  IndepYear FROM country ORDER BY Population LIMIT 1\n'
 '\n'
 'medium pred: SELECT population, name, headofstate FROM country WHERE surfacearea = (SELECT MAX(surfacearea) FROM country)\n'
 'medium gold: SELECT Name ,  population ,  HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1\n'
 '\n'
 'medium pred: SELECT name, population, headofstate FROM country WHERE surfacearea = (SELECT MAX(surfacearea) FROM country)\n'
 'medium gold: SELECT Name ,  population ,  HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1\n'
 '\n'
 'eval_err_num:226\n'
 'medium pred: SELECT country.name, COUNT(countrylanguage.language) AS num_languages FROM country JOIN countrylanguage ON country.code = '
 'countrylanguage.countrycode GROUP BY country.name HAVING COUNT(countrylanguage.language) >= 3;\n'
 'medium gold: SELECT COUNT(T2.Language) ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name HAVING '
 'COUNT(*)  >  2\n'
 '\n'
 'eval_err_num:227\n'
 'medium pred: SELECT country.name, COUNT(countrylanguage.language) AS num_languages FROM country JOIN countrylanguage ON country.code = '
 'countrylanguage.countrycode GROUP BY country.name HAVING COUNT(countrylanguage.language) > 2;\n'
 'medium gold: SELECT COUNT(T2.Language) ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name HAVING '
 'COUNT(*)  >  2\n'
 '\n'
 'eval_err_num:228\n'
 'medium pred: SELECT governmentform, SUM(population) AS total_population FROM country WHERE governmentform IN (     SELECT governmentform     FROM '
 'country     GROUP BY governmentform     HAVING AVG(lifeexpectancy) > 72 ) GROUP BY governmentform;\n'
 'medium gold: SELECT sum(Population) ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72\n'
 '\n'
 'eval_err_num:229\n'
 'medium pred: SELECT governmentform, SUM(population) AS total_population FROM country WHERE governmentform IN (     SELECT governmentform     FROM '
 'country     WHERE lifeexpectancy > 72     GROUP BY governmentform ) GROUP BY governmentform\n'
 'medium gold: SELECT sum(Population) ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72\n'
 '\n'
 'eval_err_num:230\n'
 'medium pred: SELECT continent, AVG(lifeexpectancy) AS average_life_expectancy, SUM(population) AS total_population FROM country WHERE AVG(lifeexpectancy) < '
 '72 GROUP BY continent;\n'
 'medium gold: SELECT sum(Population) ,  avg(LifeExpectancy) ,  Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72\n'
 '\n'
 'medium pred: SELECT continent, SUM(population), AVG(lifeexpectancy) FROM country WHERE AVG(lifeexpectancy) < 72 GROUP BY continent;\n'
 'medium gold: SELECT sum(Population) ,  avg(LifeExpectancy) ,  Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72\n'
 '\n'
 'eval_err_num:231\n'
 "hard pred: SELECT SUM(country.population) AS total_population, AVG(country.surfacearea) AS average_area FROM country WHERE country.continent = 'North "
 "America' AND country.surfacearea > 3000;\n"
 'hard gold: SELECT sum(Population) ,  avg(SurfaceArea) FROM country WHERE Continent  =  "North America" AND SurfaceArea  >  3000\n'
 '\n'
 'hard pred: SELECT language FROM countrylanguage GROUP BY language ORDER BY COUNT(DISTINCT countrycode) DESC LIMIT 1;\n'
 'hard gold: SELECT LANGUAGE FROM countrylanguage GROUP BY LANGUAGE ORDER BY count(*) DESC LIMIT 1\n'
 '\n'
 'eval_err_num:232\n'
 'hard pred: SELECT language FROM countrylanguage GROUP BY language HAVING COUNT(DISTINCT countrycode) = (     SELECT MAX(country_count)     FROM (         '
 'SELECT COUNT(DISTINCT countrycode) AS country_count         FROM countrylanguage         GROUP BY language     ) AS counts )\n'
 'hard gold: SELECT LANGUAGE FROM countrylanguage GROUP BY LANGUAGE ORDER BY count(*) DESC LIMIT 1\n'
 '\n'
 'medium pred: SELECT country.name, countrylanguage.language FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE '
 'countrylanguage.percentage = (     SELECT MAX(percentage)     FROM countrylanguage     WHERE countrylanguage.countrycode = country.code ) GROUP BY '
 'country.name;\n'
 'medium gold: SELECT LANGUAGE ,  CountryCode ,  max(Percentage) FROM countrylanguage GROUP BY CountryCode\n'
 '\n'
 'eval_err_num:233\n'
 'medium pred: SELECT c.code, cl.language FROM country c JOIN countrylanguage cl ON c.code = cl.countrycode WHERE cl.percentage = (SELECT MAX(percentage) FROM '
 'countrylanguage WHERE countrycode = c.code) ORDER BY c.code ASC;\n'
 'medium gold: SELECT LANGUAGE ,  CountryCode ,  max(Percentage) FROM countrylanguage GROUP BY CountryCode\n'
 '\n'
 "extra pred: SELECT COUNT(*)  FROM countrylanguage  WHERE language = 'Spanish'  AND percentage = (SELECT MAX(percentage) FROM countrylanguage WHERE language "
 "= 'Spanish')\n"
 'extra gold: SELECT count(*) ,   max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  "Spanish" GROUP BY CountryCode\n'
 '\n'
 "extra pred: SELECT COUNT(*) FROM countrylanguage WHERE language = 'Spanish' AND isofficial = 'T' AND percentage > 50;\n"
 'extra gold: SELECT count(*) ,   max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  "Spanish" GROUP BY CountryCode\n'
 '\n'
 "medium pred: SELECT countrycode FROM countrylanguage WHERE language = 'Spanish' ORDER BY percentage DESC LIMIT 1;\n"
 'medium gold: SELECT CountryCode ,  max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  "Spanish" GROUP BY CountryCode\n'
 '\n'
 "medium pred: SELECT country.code FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language = 'Spanish' "
 'AND countrylanguage.percentage > 50;\n'
 'medium gold: SELECT CountryCode ,  max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  "Spanish" GROUP BY CountryCode\n'
 '\n'
 'easy pred: SELECT COUNT(conductor_id) FROM conductor\n'
 'easy gold: SELECT count(*) FROM conductor\n'
 '\n'
 'easy pred: SELECT COUNT(conductor_id) FROM conductor;\n'
 'easy gold: SELECT count(*) FROM conductor\n'
 '\n'
 'eval_err_num:234\n'
 "easy pred: SELECT name FROM conductor WHERE nationality <> 'USA'\n"
 "easy gold: SELECT Name FROM conductor WHERE Nationality != 'USA'\n"
 '\n'
 'eval_err_num:235\n'
 "easy pred: SELECT name FROM conductor WHERE nationality <> 'USA'\n"
 "easy gold: SELECT Name FROM conductor WHERE Nationality != 'USA'\n"
 '\n'
 'eval_err_num:236\n'
 "medium pred: SELECT MAX(share), MIN(share) FROM performance WHERE type <> 'Live final'\n"
 'medium gold: SELECT max(SHARE) ,  min(SHARE) FROM performance WHERE TYPE != "Live final"\n'
 '\n'
 'eval_err_num:237\n'
 "medium pred: SELECT MAX(share), MIN(share) FROM performance WHERE type <> 'Live final'\n"
 'medium gold: SELECT max(SHARE) ,  min(SHARE) FROM performance WHERE TYPE != "Live final"\n'
 '\n'
 'eval_err_num:238\n'
 'medium pred: SELECT conductor.name FROM conductor GROUP BY conductor.name HAVING COUNT(DISTINCT conductor.orchestra_id) > 1\n'
 'medium gold: SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT(*)  >  1\n'
 '\n'
 'eval_err_num:239\n'
 'medium pred: SELECT name FROM conductor GROUP BY name HAVING COUNT(DISTINCT orchestra_id) > 1\n'
 'medium gold: SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT(*)  >  1\n'
 '\n'
 'eval_err_num:240\n'
 'extra pred: SELECT conductor.name FROM conductor GROUP BY conductor.name ORDER BY COUNT(DISTINCT orchestra_id) DESC LIMIT 1;\n'
 'extra gold: SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC '
 'LIMIT 1\n'
 '\n'
 'extra pred: SELECT conductor.name FROM conductor GROUP BY conductor.name ORDER BY COUNT(orchestra.orchestra_id) DESC LIMIT 1;\n'
 'extra gold: SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC '
 'LIMIT 1\n'
 '\n'
 'eval_err_num:241\n'
 'medium pred: SELECT c.name FROM conductor c JOIN orchestra o ON c.conductor_id = o.conductor_id WHERE o.year_of_founded > 2008\n'
 'medium gold: SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID WHERE Year_of_Founded  >  2008\n'
 '\n'
 'eval_err_num:242\n'
 'medium pred: SELECT c.name FROM conductor c JOIN orchestra o ON c.conductor_id = o.conductor_id WHERE o.year_of_founded > 2008\n'
 'medium gold: SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID WHERE Year_of_Founded  >  2008\n'
 '\n'
 'eval_err_num:243\n'
 'medium pred: SELECT record_company, COUNT(DISTINCT orchestra_id) AS number_of_orchestras FROM orchestra GROUP BY record_company;\n'
 'medium gold: SELECT Record_Company ,  COUNT(*) FROM orchestra GROUP BY Record_Company\n'
 '\n'
 'eval_err_num:244\n'
 'medium pred: SELECT record_company, COUNT(DISTINCT orchestra_id) AS num_orchestras FROM orchestra GROUP BY record_company;\n'
 'medium gold: SELECT Record_Company ,  COUNT(*) FROM orchestra GROUP BY Record_Company\n'
 '\n'
 'eval_err_num:245\n'
 'medium pred: SELECT major_record_format, COUNT(*) AS frequency FROM orchestra GROUP BY major_record_format ORDER BY frequency DESC;\n'
 'medium gold: SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC\n'
 '\n'
 'hard pred: SELECT record_company FROM orchestra GROUP BY record_company ORDER BY COUNT(orchestra_id) DESC LIMIT 1;\n'
 'hard gold: SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1\n'
 '\n'
 'eval_err_num:246\n'
 'hard pred: SELECT record_company FROM orchestra GROUP BY record_company HAVING COUNT(DISTINCT orchestra_id) = (     SELECT MAX(num_orchestras)     FROM '
 '(         SELECT COUNT(DISTINCT orchestra_id) AS num_orchestras         FROM orchestra         GROUP BY record_company     ) AS subquery )\n'
 'hard gold: SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1\n'
 '\n'
 'eval_err_num:247\n'
 'hard pred: SELECT DISTINCT o1.record_company FROM orchestra o1 JOIN orchestra o2 ON o1.record_company = o2.record_company WHERE o1.year_of_founded < 2003 '
 'AND o2.year_of_founded > 2003\n'
 'hard gold: SELECT Record_Company FROM orchestra WHERE Year_of_Founded  <  2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded  >  '
 '2003\n'
 '\n'
 'eval_err_num:248\n'
 'hard pred: SELECT DISTINCT o1.record_company FROM orchestra o1 JOIN orchestra o2 ON o1.record_company = o2.record_company WHERE o1.year_of_founded < 2003 '
 'AND o2.year_of_founded > 2003\n'
 'hard gold: SELECT Record_Company FROM orchestra WHERE Year_of_Founded  <  2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded  >  '
 '2003\n'
 '\n'
 'eval_err_num:249\n'
 "medium pred: SELECT COUNT(DISTINCT orchestra_id) FROM orchestra WHERE major_record_format IN ('CD', 'DVD')\n"
 'medium gold: SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format  =  "CD" OR Major_Record_Format  =  "DVD"\n'
 '\n'
 'eval_err_num:250\n'
 "medium pred: SELECT COUNT(DISTINCT orchestra_id) FROM orchestra WHERE major_record_format IN ('CD', 'DVD')\n"
 'medium gold: SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format  =  "CD" OR Major_Record_Format  =  "DVD"\n'
 '\n'
 'medium pred: SELECT DISTINCT year_of_founded FROM orchestra WHERE orchestra_id IN (     SELECT orchestra_id     FROM performance     GROUP BY '
 'orchestra_id     HAVING COUNT(*) > 1 )\n'
 'medium gold: SELECT Year_of_Founded FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID  =  T2.Orchestra_ID GROUP BY T2.Orchestra_ID HAVING '
 'COUNT(*)  >  1\n'
 '\n'
 'medium pred: SELECT year_of_founded FROM orchestra WHERE orchestra_id IN (     SELECT orchestra_id     FROM performance     GROUP BY orchestra_id     HAVING '
 'COUNT(*) > 1 )\n'
 'medium gold: SELECT Year_of_Founded FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID  =  T2.Orchestra_ID GROUP BY T2.Orchestra_ID HAVING '
 'COUNT(*)  >  1\n'
 '\n'
 'eval_err_num:251\n'
 'medium pred: SELECT COUNT(*) FROM highschooler WHERE grade IN (9, 10)\n'
 'medium gold: SELECT count(*) FROM Highschooler WHERE grade  =  9 OR grade  =  10\n'
 '\n'
 'eval_err_num:252\n'
 'medium pred: SELECT COUNT(*) FROM highschooler WHERE grade IN (9, 10)\n'
 'medium gold: SELECT count(*) FROM Highschooler WHERE grade  =  9 OR grade  =  10\n'
 '\n'
 'eval_err_num:253\n'
 'medium pred: SELECT grade, COUNT(*) AS count FROM highschooler GROUP BY grade;\n'
 'medium gold: SELECT grade ,  count(*) FROM Highschooler GROUP BY grade\n'
 '\n'
 'eval_err_num:254\n'
 'medium pred: SELECT student_id, COUNT(friend_id) AS number_of_friends FROM friend GROUP BY student_id;\n'
 'medium gold: SELECT student_id ,  count(*) FROM Friend GROUP BY student_id\n'
 '\n'
 'eval_err_num:255\n'
 'medium pred: SELECT student_id, COUNT(friend_id) AS num_friends FROM friend GROUP BY student_id;\n'
 'medium gold: SELECT student_id ,  count(*) FROM Friend GROUP BY student_id\n'
 '\n'
 'eval_err_num:256\n'
 'medium pred: SELECT h.name, COUNT(f.friend_id) AS num_friends FROM highschooler h LEFT JOIN friend f ON h.id = f.student_id GROUP BY h.name;\n'
 'medium gold: SELECT T2.name ,  count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id\n'
 '\n'
 'eval_err_num:257\n'
 'medium pred: SELECT h.name, COUNT(f.friend_id) FROM highschooler h LEFT JOIN friend f ON h.id = f.student_id GROUP BY h.name;\n'
 'medium gold: SELECT T2.name ,  count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id\n'
 '\n'
 'eval_err_num:258\n'
 'extra pred: SELECT name FROM highschooler WHERE id IN (     SELECT student_id     FROM friend     GROUP BY student_id     HAVING COUNT(friend_id) = '
 '(         SELECT MAX(friend_count)         FROM (             SELECT student_id, COUNT(friend_id) AS friend_count             FROM friend             GROUP '
 'BY student_id         ) AS subquery     ) )\n'
 'extra gold: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1\n'
 '\n'
 'eval_err_num:259\n'
 'extra pred: SELECT h.name FROM highschooler h JOIN friend f ON h.id = f.student_id GROUP BY h.id, h.name ORDER BY COUNT(f.friend_id) DESC LIMIT 1;\n'
 'extra gold: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1\n'
 '\n'
 'eval_err_num:260\n'
 'medium pred: SELECT h.name FROM highschooler h JOIN friend f ON h.id = f.student_id GROUP BY h.id, h.name HAVING COUNT(f.friend_id) >= 3\n'
 'medium gold: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  3\n'
 '\n'
 'medium pred: SELECT name FROM highschooler WHERE id IN (     SELECT student_id     FROM friend     GROUP BY student_id     HAVING COUNT(friend_id) >= 3 )\n'
 'medium gold: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  3\n'
 '\n'
 'eval_err_num:261\n'
 "hard pred: SELECT h.name FROM highschooler h JOIN friend f ON h.id = f.friend_id JOIN highschooler k ON f.student_id = k.id WHERE k.name = 'Kyle'\n"
 'hard gold: SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE '
 'T2.name  =  "Kyle"\n'
 '\n'
 'eval_err_num:262\n'
 "hard pred: SELECT h.name FROM highschooler h JOIN friend f ON h.id = f.friend_id JOIN highschooler k ON f.student_id = k.id WHERE k.name = 'Kyle'\n"
 'hard gold: SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE '
 'T2.name  =  "Kyle"\n'
 '\n'
 "medium pred: SELECT COUNT(*) FROM friend WHERE student_id = (SELECT id FROM highschooler WHERE name = 'Kyle')\n"
 'medium gold: SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  "Kyle"\n'
 '\n'
 "medium pred: SELECT COUNT(*) FROM friend WHERE student_id = (SELECT id FROM highschooler WHERE name = 'Kyle')\n"
 'medium gold: SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  "Kyle"\n'
 '\n'
 'hard pred: SELECT id FROM highschooler WHERE id NOT IN (SELECT student_id FROM friend)\n'
 'hard gold: SELECT id FROM Highschooler EXCEPT SELECT student_id FROM Friend\n'
 '\n'
 'hard pred: SELECT id FROM highschooler WHERE id NOT IN (SELECT student_id FROM friend)\n'
 'hard gold: SELECT id FROM Highschooler EXCEPT SELECT student_id FROM Friend\n'
 '\n'
 'hard pred: SELECT name FROM highschooler WHERE id NOT IN (SELECT student_id FROM friend)\n'
 'hard gold: SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id\n'
 '\n'
 'hard pred: SELECT name FROM highschooler WHERE id NOT IN (SELECT student_id FROM friend)\n'
 'hard gold: SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id\n'
 '\n'
 'eval_err_num:263\n'
 'hard pred: SELECT DISTINCT h.id FROM highschooler h JOIN friend f ON h.id = f.student_id JOIN likes l ON h.id = l.student_id WHERE f.friend_id <> h.id AND '
 'l.liked_id <> h.id;\n'
 'hard gold: SELECT student_id FROM Friend INTERSECT SELECT liked_id FROM Likes\n'
 '\n'
 'hard pred: SELECT DISTINCT student_id FROM friend WHERE student_id IN (SELECT student_id FROM likes) AND student_id IN (SELECT friend_id FROM friend)\n'
 'hard gold: SELECT student_id FROM Friend INTERSECT SELECT liked_id FROM Likes\n'
 '\n'
 'eval_err_num:264\n'
 'hard pred: SELECT DISTINCT h.name FROM highschooler h JOIN friend f ON h.id = f.student_id JOIN likes l ON h.id = l.student_id WHERE f.friend_id IS NOT NULL '
 'AND l.liked_id IS NOT NULL;\n'
 'hard gold: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler '
 'AS T2 ON T1.liked_id  =  T2.id\n'
 '\n'
 'eval_err_num:265\n'
 'hard pred: SELECT DISTINCT h.name FROM highschooler h JOIN friend f ON h.id = f.student_id JOIN likes l ON h.id = l.student_id WHERE h.id IN (SELECT '
 'student_id FROM friend) AND h.id IN (SELECT student_id FROM likes)\n'
 'hard gold: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler '
 'AS T2 ON T1.liked_id  =  T2.id\n'
 '\n'
 'eval_err_num:266\n'
 'medium pred: SELECT student_id, COUNT(liked_id) AS num_likes FROM likes GROUP BY student_id;\n'
 'medium gold: SELECT student_id ,  count(*) FROM Likes GROUP BY student_id\n'
 '\n'
 'eval_err_num:267\n'
 'medium pred: SELECT student_id, COUNT(liked_id) AS num_likes FROM likes GROUP BY student_id;\n'
 'medium gold: SELECT student_id ,  count(*) FROM Likes GROUP BY student_id\n'
 '\n'
 'eval_err_num:268\n'
 'medium pred: SELECT h.name, COUNT(l.liked_id) AS num_likes FROM highschooler h JOIN likes l ON h.id = l.student_id GROUP BY h.name;\n'
 'medium gold: SELECT T2.name ,  count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id\n'
 '\n'
 'eval_err_num:269\n'
 'medium pred: SELECT h.name, COUNT(l.liked_id) AS num_likes FROM highschooler h JOIN likes l ON h.id = l.student_id GROUP BY h.name;\n'
 'medium gold: SELECT T2.name ,  count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id\n'
 '\n'
 'eval_err_num:270\n'
 'extra pred: SELECT h.name FROM highschooler h JOIN likes l ON h.id = l.student_id GROUP BY h.id, h.name ORDER BY COUNT(l.liked_id) DESC LIMIT 1;\n'
 'extra gold: SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1\n'
 '\n'
 'eval_err_num:271\n'
 'extra pred: SELECT h.name FROM highschooler h JOIN likes l ON h.id = l.student_id GROUP BY h.id, h.name ORDER BY COUNT(l.liked_id) DESC LIMIT 1;\n'
 'extra gold: SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1\n'
 '\n'
 'eval_err_num:272\n'
 'medium pred: SELECT h.name FROM highschooler h JOIN likes l ON h.id = l.student_id GROUP BY h.id, h.name HAVING COUNT(l.liked_id) >= 2\n'
 'medium gold: SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  2\n'
 '\n'
 'eval_err_num:273\n'
 'medium pred: SELECT DISTINCT h.name FROM highschooler h JOIN likes l ON h.id = l.student_id GROUP BY h.id HAVING COUNT(l.liked_id) >= 2\n'
 'medium gold: SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  2\n'
 '\n'
 'eval_err_num:274\n'
 'hard pred: SELECT h.name FROM highschooler h JOIN friend f ON h.id = f.student_id WHERE h.grade > 5 GROUP BY h.id HAVING COUNT(f.friend_id) >= 2\n'
 'hard gold: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.grade  >  5 GROUP BY T1.student_id HAVING count(*)  '
 '>=  2\n'
 '\n'
 'hard pred: SELECT name  FROM highschooler  WHERE grade > 5  AND id IN (SELECT student_id             FROM friend             GROUP BY student_id             '
 'HAVING COUNT(friend_id) >= 2)\n'
 'hard gold: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.grade  >  5 GROUP BY T1.student_id HAVING count(*)  '
 '>=  2\n'
 '\n'
 "medium pred: SELECT COUNT(*) FROM likes WHERE student_id = (SELECT id FROM highschooler WHERE name = 'Kyle')\n"
 'medium gold: SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  "Kyle"\n'
 '\n'
 "medium pred: SELECT COUNT(*) FROM likes WHERE student_id = (SELECT id FROM highschooler WHERE name = 'Kyle')\n"
 'medium gold: SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  "Kyle"\n'
 '\n'
 'hard pred: SELECT AVG(grade) FROM highschooler WHERE id IN (SELECT DISTINCT student_id FROM friend)\n'
 'hard gold: SELECT avg(grade) FROM Highschooler WHERE id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)\n'
 '\n'
 'hard pred: SELECT AVG(grade) FROM highschooler WHERE id IN (SELECT student_id FROM friend)\n'
 'hard gold: SELECT avg(grade) FROM Highschooler WHERE id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)\n'
 '\n'
 'extra pred: SELECT MIN(grade) FROM highschooler WHERE id NOT IN (SELECT student_id FROM friend)\n'
 'extra gold: SELECT min(grade) FROM Highschooler WHERE id NOT IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)\n'
 '\n'
 'extra pred: SELECT MIN(grade) FROM highschooler WHERE id NOT IN (SELECT student_id FROM friend)\n'
 'extra gold: SELECT min(grade) FROM Highschooler WHERE id NOT IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)\n'
 '\n'
 'hard pred: SELECT DISTINCT state FROM owners WHERE state IN (SELECT state FROM professionals)\n'
 'hard gold: SELECT state FROM Owners INTERSECT SELECT state FROM Professionals\n'
 '\n'
 'eval_err_num:275\n'
 'hard pred: SELECT DISTINCT owners.state FROM owners INNER JOIN professionals ON owners.state = professionals.state\n'
 'hard gold: SELECT state FROM Owners INTERSECT SELECT state FROM Professionals\n'
 '\n'
 "extra pred: SELECT professional_id, last_name, cell_number FROM professionals WHERE state = 'Indiana' OR professional_id IN (   SELECT professional_id   "
 'FROM treatments   GROUP BY professional_id   HAVING COUNT(*) > 2 )\n'
 "extra gold: SELECT professional_id ,  last_name ,  cell_number FROM Professionals WHERE state  =  'Indiana' UNION SELECT T1.professional_id ,  T1.last_name "
 ',  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  '
 '>  2\n'
 '\n'
 "extra pred: SELECT professional_id, last_name, cell_number FROM professionals WHERE state = 'Indiana' OR professional_id IN (     SELECT professional_id     "
 'FROM treatments     GROUP BY professional_id     HAVING COUNT(*) > 2 )\n'
 "extra gold: SELECT professional_id ,  last_name ,  cell_number FROM Professionals WHERE state  =  'Indiana' UNION SELECT T1.professional_id ,  T1.last_name "
 ',  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  '
 '>  2\n'
 '\n'
 'eval_err_num:276\n'
 'hard pred: SELECT d.name FROM dogs d JOIN treatments t ON d.dog_id = t.dog_id JOIN charges c ON t.treatment_type_code = c.charge_id WHERE c.charge_amount <= '
 '1000\n'
 'hard gold: SELECT name FROM Dogs WHERE dog_id NOT IN( SELECT dog_id FROM Treatments GROUP BY dog_id HAVING sum(cost_of_treatment)  >  1000 )\n'
 '\n'
 'eval_err_num:277\n'
 'hard pred: SELECT d.name FROM dogs d JOIN owners o ON d.owner_id = o.owner_id JOIN treatments t ON d.dog_id = t.dog_id WHERE t.cost_of_treatment <= 1000\n'
 'hard gold: SELECT name FROM Dogs WHERE dog_id NOT IN( SELECT dog_id FROM Treatments GROUP BY dog_id HAVING sum(cost_of_treatment)  >  1000 )\n'
 '\n'
 'eval_err_num:278\n'
 'hard pred: SELECT DISTINCT first_name  FROM (     SELECT first_name      FROM owners      UNION      SELECT first_name      FROM professionals  ) AS names  '
 'WHERE first_name NOT IN (     SELECT name      FROM dogs )\n'
 'hard gold: SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs\n'
 '\n'
 'eval_err_num:279\n'
 'hard pred: SELECT DISTINCT first_name FROM (   SELECT first_name   FROM owners   UNION   SELECT first_name   FROM professionals ) AS names WHERE first_name '
 'NOT IN (   SELECT name   FROM dogs )\n'
 'hard gold: SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs\n'
 '\n'
 'extra pred: SELECT professional_id, role_code, email_address FROM professionals WHERE professional_id NOT IN (SELECT professional_id FROM treatments)\n'
 'extra gold: SELECT professional_id ,  role_code ,  email_address FROM Professionals EXCEPT SELECT T1.professional_id ,  T1.role_code ,  T1.email_address '
 'FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id\n'
 '\n'
 'extra pred: SELECT professional_id, role_code, email_address FROM professionals WHERE professional_id NOT IN (SELECT professional_id FROM treatments)\n'
 'extra gold: SELECT professional_id ,  role_code ,  email_address FROM Professionals EXCEPT SELECT T1.professional_id ,  T1.role_code ,  T1.email_address '
 'FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id\n'
 '\n'
 'eval_err_num:280\n'
 'extra pred: SELECT owner_id, first_name, last_name FROM owners WHERE owner_id IN (     SELECT owner_id     FROM dogs     GROUP BY owner_id     HAVING '
 'COUNT(*) = (         SELECT MAX(owner_count)         FROM (             SELECT owner_id, COUNT(*) as owner_count             FROM dogs             GROUP BY '
 'owner_id         ) AS counts     ) )\n'
 'extra gold: SELECT T1.owner_id ,  T2.first_name ,  T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER '
 'BY count(*) DESC LIMIT 1\n'
 '\n'
 'extra pred: SELECT owner_id, first_name, last_name FROM owners WHERE owner_id = (   SELECT owner_id   FROM dogs   GROUP BY owner_id   ORDER BY COUNT(*) '
 'DESC   LIMIT 1 )\n'
 'extra gold: SELECT T1.owner_id ,  T2.first_name ,  T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER '
 'BY count(*) DESC LIMIT 1\n'
 '\n'
 'medium pred: SELECT professional_id, role_code, first_name FROM professionals WHERE professional_id IN (     SELECT professional_id     FROM treatments     '
 'GROUP BY professional_id     HAVING COUNT(*) >= 2 )\n'
 'medium gold: SELECT T1.professional_id ,  T1.role_code ,  T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  '
 'T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2\n'
 '\n'
 'medium pred: SELECT professional_id, role_code, first_name FROM professionals WHERE professional_id IN (     SELECT professional_id     FROM treatments     '
 'GROUP BY professional_id     HAVING COUNT(*) >= 2 )\n'
 'medium gold: SELECT T1.professional_id ,  T1.role_code ,  T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  '
 'T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2\n'
 '\n'
 'extra pred: SELECT breed_name FROM breeds WHERE breed_code = (     SELECT breed_code     FROM dogs     GROUP BY breed_code     ORDER BY COUNT(*) DESC     '
 'LIMIT 1 )\n'
 'extra gold: SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1\n'
 '\n'
 'extra pred: SELECT breed_name FROM breeds WHERE breed_code = (     SELECT breed_code     FROM dogs     GROUP BY breed_code     ORDER BY COUNT(*) DESC     '
 'LIMIT 1 )\n'
 'extra gold: SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1\n'
 '\n'
 'eval_err_num:281\n'
 'extra pred: SELECT owner_id, last_name FROM owners WHERE owner_id IN (     SELECT owner_id     FROM dogs     WHERE dog_id IN (         SELECT dog_id         '
 'FROM treatments         GROUP BY dog_id         HAVING COUNT(*) = (             SELECT MAX(treatment_count)             FROM (                 SELECT '
 'dog_id, COUNT(*) as treatment_count                 FROM treatments                 GROUP BY dog_id             ) AS dog_treatment_counts         )     ) )\n'
 'extra gold: SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  '
 'T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1\n'
 '\n'
 'eval_err_num:282\n'
 'extra pred: SELECT t.owner_id, o.last_name FROM treatments t JOIN dogs d ON t.dog_id = d.dog_id JOIN owners o ON d.owner_id = o.owner_id GROUP BY '
 't.owner_id, o.last_name ORDER BY SUM(t.cost_of_treatment) DESC LIMIT 1;\n'
 'extra gold: SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  '
 'T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1\n'
 '\n'
 'extra pred: SELECT treatment_types.treatment_type_description FROM treatment_types JOIN treatments ON treatment_types.treatment_type_code = '
 'treatments.treatment_type_code GROUP BY treatment_types.treatment_type_description ORDER BY SUM(treatments.cost_of_treatment) ASC LIMIT 1;\n'
 'extra gold: SELECT T1.treatment_type_description FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP '
 'BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1\n'
 '\n'
 'extra pred: SELECT treatment_type_description FROM treatment_types WHERE treatment_type_code = (   SELECT treatment_type_code   FROM treatments   GROUP BY '
 'treatment_type_code   ORDER BY SUM(cost_of_treatment) ASC   LIMIT 1 )\n'
 'extra gold: SELECT T1.treatment_type_description FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP '
 'BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1\n'
 '\n'
 'eval_err_num:283\n'
 'extra pred: SELECT owner_id, zip_code FROM owners WHERE owner_id IN (     SELECT owner_id     FROM dogs     WHERE owner_id IS NOT NULL     GROUP BY '
 'owner_id     HAVING SUM(         SELECT charge_amount         FROM charges         WHERE charges.charge_id = dogs.dog_id     ) = (         SELECT '
 'MAX(total_amount)         FROM (             SELECT owner_id, SUM(charge_amount) AS total_amount             FROM dogs             JOIN charges ON '
 'dogs.dog_id = charges.charge_id             WHERE owner_id IS NOT NULL             GROUP BY owner_id         ) AS subquery     ) )\n'
 'extra gold: SELECT T1.owner_id ,  T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  '
 'T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1\n'
 '\n'
 'eval_err_num:284\n'
 'extra pred: SELECT owner_id, zip_code FROM owners WHERE owner_id IN (     SELECT owner_id     FROM dogs     WHERE owner_id IN (         SELECT '
 'owner_id         FROM dogs         GROUP BY owner_id         HAVING SUM(             SELECT cost_of_treatment             FROM treatments             WHERE '
 'treatments.dog_id = dogs.dog_id         ) = (             SELECT MAX(total_cost)             FROM (                 SELECT owner_id, SUM(cost_of_treatment) '
 'AS total_cost                 FROM treatments                 JOIN dogs ON treatments.dog_id = dogs.dog_id                 GROUP BY owner_id             ) '
 'AS total_costs         )     ) )\n'
 'extra gold: SELECT T1.owner_id ,  T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  '
 'T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1\n'
 '\n'
 'medium pred: SELECT professional_id, cell_number FROM professionals WHERE professional_id IN (     SELECT professional_id     FROM treatments     GROUP BY '
 'professional_id     HAVING COUNT(DISTINCT treatment_type_code) >= 2 )\n'
 'medium gold: SELECT T1.professional_id ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP '
 'BY T1.professional_id HAVING count(*)  >=  2\n'
 '\n'
 'medium pred: SELECT professional_id, cell_number FROM professionals WHERE professional_id IN (     SELECT professional_id     FROM treatments     GROUP BY '
 'professional_id     HAVING COUNT(DISTINCT treatment_type_code) >= 2 )\n'
 'medium gold: SELECT T1.professional_id ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP '
 'BY T1.professional_id HAVING count(*)  >=  2\n'
 '\n'
 'extra pred: SELECT first_name, last_name FROM professionals WHERE professional_id IN (     SELECT professional_id     FROM treatments     WHERE '
 'cost_of_treatment < (         SELECT AVG(cost_of_treatment)         FROM treatments     ) )\n'
 'extra gold: SELECT DISTINCT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  <  ( SELECT '
 'avg(cost_of_treatment) FROM Treatments )\n'
 '\n'
 'extra pred: SELECT DISTINCT first_name, last_name FROM professionals WHERE professional_id IN (   SELECT professional_id   FROM treatments   WHERE '
 'cost_of_treatment < (     SELECT AVG(cost_of_treatment)     FROM treatments   ) )\n'
 'extra gold: SELECT DISTINCT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  <  ( SELECT '
 'avg(cost_of_treatment) FROM Treatments )\n'
 '\n'
 'medium pred: SELECT owners.first_name, owners.last_name, sizes.size_description FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id JOIN sizes ON '
 'dogs.size_code = sizes.size_code\n'
 'medium gold: SELECT T1.first_name ,  T1.last_name ,  T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id\n'
 '\n'
 'medium pred: SELECT owners.first_name, owners.last_name, sizes.size_description FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id JOIN sizes ON '
 'dogs.size_code = sizes.size_code\n'
 'medium gold: SELECT T1.first_name ,  T1.last_name ,  T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id\n'
 '\n'
 'eval_err_num:285\n'
 'extra pred: SELECT d.name, t.date_of_treatment FROM dogs d JOIN breeds b ON d.breed_code = b.breed_code JOIN treatments t ON d.dog_id = t.dog_id WHERE '
 'b.breed_code = (   SELECT breed_code   FROM breeds   ORDER BY breed_code DESC   LIMIT 1 ) ORDER BY d.name ASC, t.date_of_treatment ASC;\n'
 'extra gold: SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T1.breed_code  =  ( SELECT '
 'breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )\n'
 '\n'
 'eval_err_num:286\n'
 'extra pred: SELECT d.name, t.date_of_treatment FROM dogs d JOIN breeds b ON d.breed_code = b.breed_code JOIN treatments t ON d.dog_id = t.dog_id WHERE '
 "b.breed_name = 'rarest' ORDER BY d.name, t.date_of_treatment;\n"
 'extra gold: SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T1.breed_code  =  ( SELECT '
 'breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )\n'
 '\n'
 'eval_err_num:287\n'
 "medium pred: SELECT o.first_name, d.name FROM owners o JOIN dogs d ON o.owner_id = d.owner_id WHERE o.state = 'Virginia'\n"
 "medium gold: SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.state  =  'Virginia'\n"
 '\n'
 'eval_err_num:288\n'
 'medium pred: SELECT dogs.date_arrived, dogs.date_departed FROM dogs INNER JOIN treatments ON dogs.dog_id = treatments.dog_id\n'
 'medium gold: SELECT DISTINCT T1.date_arrived ,  T1.date_departed FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id\n'
 '\n'
 'eval_err_num:289\n'
 'extra pred: SELECT o.last_name FROM owners o JOIN dogs d ON o.owner_id = d.owner_id ORDER BY d.age ASC LIMIT 1;\n'
 'extra gold: SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT max(age) FROM Dogs )\n'
 '\n'
 'eval_err_num:290\n'
 'extra pred: SELECT o.last_name FROM owners o JOIN dogs d ON o.owner_id = d.owner_id WHERE d.age = (SELECT MIN(age) FROM dogs)\n'
 'extra gold: SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT max(age) FROM Dogs )\n'
 '\n'
 'easy pred: SELECT COUNT(*) FROM treatments\n'
 'easy gold: SELECT count(DISTINCT dog_id) FROM Treatments\n'
 '\n'
 'eval_err_num:291\n'
 'extra pred: SELECT COUNT(*) FROM owners WHERE owner_id NOT IN (SELECT owner_id FROM dogs WHERE date_departed IS NULL)\n'
 'extra gold: SELECT count(*) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs )\n'
 '\n'
 'extra pred: SELECT COUNT(DISTINCT professional_id) FROM professionals WHERE professional_id NOT IN (SELECT DISTINCT professional_id FROM treatments)\n'
 'extra gold: SELECT count(*) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments )\n'
 '\n'
 'extra pred: SELECT COUNT(*) FROM professionals WHERE professional_id NOT IN (SELECT DISTINCT professional_id FROM treatments)\n'
 'extra gold: SELECT count(*) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments )\n'
 '\n'
 'eval_err_num:292\n'
 'medium pred: SELECT breeds.breed_name, sizes.size_description FROM breeds, sizes\n'
 'medium gold: SELECT DISTINCT breed_code ,  size_code FROM dogs\n'
 '\n'
 'eval_err_num:293\n'
 'medium pred: SELECT DISTINCT d.breed_code, d.size_code FROM dogs d\n'
 'medium gold: SELECT DISTINCT breed_code ,  size_code FROM dogs\n'
 '\n'
 'eval_err_num:294\n'
 "easy pred: SELECT name FROM singer WHERE citizenship <> 'France'\n"
 'easy gold: SELECT Name FROM singer WHERE Citizenship != "France"\n'
 '\n'
 'eval_err_num:295\n'
 "easy pred: SELECT name FROM singer WHERE citizenship <> 'French'\n"
 'easy gold: SELECT Name FROM singer WHERE Citizenship != "France"\n'
 '\n'
 'eval_err_num:296\n'
 'medium pred: SELECT name FROM singer WHERE birth_year IN (1948, 1949)\n'
 'medium gold: SELECT Name FROM singer WHERE Birth_Year  =  1948 OR Birth_Year  =  1949\n'
 '\n'
 'eval_err_num:297\n'
 'medium pred: SELECT citizenship, COUNT(DISTINCT singer_id) AS num_singers FROM singer GROUP BY citizenship;\n'
 'medium gold: SELECT Citizenship ,  COUNT(*) FROM singer GROUP BY Citizenship\n'
 '\n'
 'eval_err_num:298\n'
 'medium pred: SELECT citizenship, COUNT(*) AS num_singers FROM singer GROUP BY citizenship\n'
 'medium gold: SELECT Citizenship ,  COUNT(*) FROM singer GROUP BY Citizenship\n'
 '\n'
 'medium pred: SELECT name FROM singer WHERE singer_id IN (SELECT singer_id FROM song                     GROUP BY singer_id                     HAVING '
 'COUNT(*) > 1)\n'
 'medium gold: SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*)  >  1\n'
 '\n'
 'medium pred: SELECT name FROM singer WHERE singer_id IN (SELECT singer_id FROM song GROUP BY singer_id HAVING COUNT(*) > 1)\n'
 'medium gold: SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*)  >  1\n'
 '\n'
 'eval_err_num:299\n'
 'medium pred: SELECT singer.name, SUM(song.sales) AS total_sales FROM singer JOIN song ON singer.singer_id = song.singer_id GROUP BY singer.name;\n'
 'medium gold: SELECT T1.Name ,  sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name\n'
 '\n'
 'eval_err_num:300\n'
 'medium pred: SELECT singer.name, SUM(song.sales) AS total_sales FROM singer JOIN song ON singer.singer_id = song.singer_id GROUP BY singer.name;\n'
 'medium gold: SELECT T1.Name ,  sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name\n'
 '\n'
 'hard pred: SELECT DISTINCT citizenship  FROM singer  WHERE birth_year < 1945 AND birth_year > 1955;\n'
 'hard gold: SELECT Citizenship FROM singer WHERE Birth_Year  <  1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year  >  1955\n'
 '\n'
 "medium pred: SELECT feature_type_name  FROM ref_feature_types  WHERE feature_type_code = 'AirCon'\n"
 'medium gold: SELECT T2.feature_type_name FROM Other_Available_Features AS T1 JOIN Ref_Feature_Types AS T2 ON T1.feature_type_code  =  T2.feature_type_code '
 'WHERE T1.feature_name  =  "AirCon"\n'
 '\n'
 "medium pred: SELECT property_type_description FROM ref_property_types WHERE property_type_code = 'property_code';\n"
 'medium gold: SELECT T2.property_type_description FROM Properties AS T1 JOIN Ref_Property_Types AS T2 ON T1.property_type_code  =  T2.property_type_code '
 'GROUP BY T1.property_type_code\n'
 '\n'
 'eval_err_num:301\n'
 "hard pred: SELECT property_name FROM properties WHERE (property_type_code = 'APT' OR property_type_code = 'HSE') AND room_count > 1;\n"
 'hard gold: SELECT property_name FROM Properties WHERE property_type_code  =  "House" UNION SELECT property_name FROM Properties WHERE property_type_code  =  '
 '"Apartment" AND room_count  >  1\n'
 '\n'
 '                     easy                 medium               hard                 extra                all                 \n'
 'count                250                  440                  174                  170                  1034                \n'
 '=====================   EXECUTION ACCURACY     =====================\n'
 'execution            0.800                0.536                0.477                0.359                0.561               \n'
 '\n'
 '====================== EXACT MATCHING ACCURACY =====================\n'
 'exact match          0.772                0.384                0.339                0.047                0.415               \n'
 '\n'
 '---------------------PARTIAL MATCHING ACCURACY----------------------\n'
 'select               0.925                0.909                0.964                0.865                0.917               \n'
 'select(no AGG)       0.934                0.923                0.982                0.896                0.932               \n'
 'where                0.899                0.451                0.484                0.202                0.507               \n'
 'where(no OP)         0.919                0.456                0.549                0.345                0.552               \n'
 'group(no Having)     0.933                0.750                1.000                0.529                0.800               \n'
 'group                0.600                0.600                0.944                0.353                0.629               \n'
 'order                0.864                0.949                0.885                0.474                0.830               \n'
 'and/or               1.000                0.966                0.946                0.889                0.959               \n'
 'IUEN                 0.000                0.000                1.000                0.000                1.000               \n'
 'keywords             0.934                0.715                0.658                0.427                0.708               \n'
 '---------------------- PARTIAL MATCHING RECALL ----------------------\n'
 'select               0.844                0.616                0.615                0.488                0.650               \n'
 'select(no AGG)       0.852                0.625                0.626                0.506                0.661               \n'
 'where                0.824                0.494                0.478                0.173                0.500               \n'
 'where(no OP)         0.843                0.500                0.543                0.296                0.544               \n'
 'group(no Having)     0.700                0.115                0.462                0.114                0.208               \n'
 'group                0.450                0.092                0.436                0.076                0.164               \n'
 'order                0.864                0.493                0.390                0.111                0.371               \n'
 'and/or               0.996                0.998                0.958                0.883                0.973               \n'
 'IUEN                 0.000                0.000                0.024                0.000                0.013               \n'
 'keywords             0.847                0.465                0.420                0.241                0.478               \n'
 '---------------------- PARTIAL MATCHING F1 --------------------------\n'
 'select               0.883                0.734                0.751                0.624                0.761               \n'
 'select(no AGG)       0.891                0.745                0.765                0.647                0.773               \n'
 'where                0.860                0.472                0.481                0.187                0.504               \n'
 'where(no OP)         0.879                0.477                0.546                0.319                0.548               \n'
 'group(no Having)     0.800                0.199                0.632                0.187                0.330               \n'
 'group                0.514                0.159                0.596                0.125                0.260               \n'
 'order                0.864                0.649                0.541                0.180                0.513               \n'
 'and/or               0.998                0.981                0.952                0.886                0.966               \n'
 'IUEN                 1.000                1.000                0.047                1.000                0.025               \n'
 'keywords             0.888                0.564                0.512                0.308                0.571               \n')